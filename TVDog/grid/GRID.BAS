2   KEY OFF
5   CLEAR ,,,32768!
6   DEFINT A-Y:DEFDBL Z
8   DIM A(514),GRID%(4104),COORD(3)
10  DEF FNX%= 194 - 20*COORD(1) - 10*COORD(2) + 28*COORD(3)
15  DEF FNY%= 5 + 49*COORD(1) + 10*COORD(2)
17  DEF FNOFFSET%= COORD(1)*16+COORD(3)*4+COORD(2)+1
20  SCREEN 5:CLS
300 Y=1:N=0:T=0:W=0:X=0:INSTFL=0:DIFFL=0:WELFL=0:FALSE=0:TRUE = NOT FALSE
305 LOCATE ,,0
310 IF DIFFL<> 0 THEN 330
315 '   Put Game Instructions Here ....................
320 GOSUB 5000                  'Initialize
470 '
480 ' Draw Playing Grids
484 '
485 COLOR 8
486 LINE (14,50)-(75,140),8,B:PAINT STEP(-2,-2),15,8
487 FOR X%=8 TO 14 STEP 3
488 LOCATE X%,3:PRINT"…ÕÀÕÀÕª":LOCATE ,3:PRINT"∫ ∫ ∫ ∫":LOCATE ,3:PRINT"»Õ Õ Õº"
489 NEXT X%
490 OFFSET%=14:GOSUB 3400 'Mark current block
491 DRAW"BM14,50C8E15R61NG15D90G15"
492 PAINT STEP(2,-4),8,8:PAINT (20,45),7,8
500 XBEG%=193
502 DRAW "BM190,1C8R116G44L116NE44D3R116NU3E44U3"
505 FOR Y%=4 TO 4+3*10 STEP 10
510  FOR X%=XBEG% TO XBEG%+30*3 STEP 28
515   DRAW "BM"+STR$(X%)+","+STR$(Y%)
520   DRAW "C8R20G8L20E8D4NR16G4
525   PAINT (X%+10,Y%+2),7,8
530   PAINT (X%-2,Y%+4),8,8
535  NEXT X%
540  XBEG%=XBEG%-10
545 NEXT Y%
550 PAINT (248,2),15,8
555 PAINT (220,46),7,8
560 PAINT (288,21),8,8
565 GET (144,1)-(306,49),GRID%
570 LOCATE 15,4:COLOR 4:PRINT USING"#";WIN
571 LOCATE 15,6:COLOR 1:PRINT USING "#";LOSS
572 LOCATE 15,8:COLOR 15:PRINT USING "#";TIE
573 GOSUB 3450 'Unmark current block
574 X%=144
575 FOR Y%=50 TO 150 STEP 49
580   X%=X% - 20
585  PUT (X%,Y%),GRID%,PSET
590 NEXT Y%
690 '
700 WHILE TRUE
705   YZ=YZ+1:IF (YZ=9)*(V=1)+(YZ=33)*(V>1) THEN 3260  ' Tie Game !!!
708 '
710 '   Players move
715 '
718   READING = TRUE:I=0
719   OFFSET%=8:GOSUB 3400:COLOR 4  'Blank out previous values
720   WHILE READING
722     I = I + 1:LOCATE 2,I*2:PRINT" ":LOCATE 9,2+I*2
724     A$=INKEY$:IF A$="" THEN 724
726     IF ASC(A$)= 8  THEN IF I > 1 THEN I=I-2:BEEP:GOTO 730
727     IF A$ < "1" OR A$ > "4" THEN I=I-1:BEEP:GOTO 730
728     COORD(I) = VAL(A$)-1:PRINT A$
729     IF I=3 THEN READING = NOT READING
730   WEND
740   GOSUB 3450
745   D = FNOFFSET%
750   IF A(D)<>0 THEN BEEP:GOTO 718 ELSE A(D)=1
760   DRAW "BM"+STR$(FNX%)+","+STR$(FNY%)+"C4R17G7L17E7BM+2,2P4,4"
765   GOSUB 6000    'Create sound
770 '
780 ' Do computers move
790 '
800 OFFSET%=11:GOSUB 3400    'Blank out previous values
1760   GOSUB 2620                  ' Evaluate Situation
1770   GOSUB 2090                  ' Compute and Execute Computers Move
1775   GOSUB 6000       'Create Sound
1780 WEND                        ' Continue playing the game!!!!
2020 ' ******* Subroutine to convert from RCB
2030 ZUM1=D/16:COORD(1)=INT(ZUM1+.9899999)-1
2040 B1=COORD(1):B2=B1*16:B3=D-B2:ZUM1=B3/4:COORD(3)=INT(ZUM1+.9899999)-1
2050 B5=COORD(3):B6=B5*4:COORD(2)=B3-B6-1
2060 RETURN
2070 REM
2080 REM---main logic subroutines---
2090 REM   Q, YZ, V on entry  (Q tells where to block)
2100 REM
2110 REM see if we have a must block condition
2115 L=0
2120 IF (YZ<3)*(V>1)+(YZ=1) THEN 2550       'Do random move
2130 IF Q=0 THEN 2200                       'No block necessary
2140 G = 0                                  'Get the cell to block
2150 WHILE A(A(65+G+(Q-1)*4)) AND G < 4
2160   G = G + 1
2170 WEND
2175 IF G=4 THEN STOP
2180 K = A(65+G+(Q-1)*4)
2190 GOTO 2590                              'Execute Move
2200 ' No block needed, Get a stratigic cell
2210 FOR I=1 TO 64 : A(450+I)=0:NEXT I
2230 TIE = TRUE
2240 REM compute value for each box as it appears in the win array
2250 FOR I=1 TO (-10*(V=1)-76*(V<>1)) STEP (1-3*(V=2))
2260   B=A(370+I)
2270 '   If value of win combo is zero then forget it
2280   IF B=0 THEN TIE=FALSE:GOTO 2460
2290 '   Get strategy value of this win combo in f
2300   F=0
2310   IF (B=1) OR (B=5) THEN F=1
2320   IF B=2 THEN F=4
2330   IF B=3 THEN STOP
2340   IF B=10 THEN F=2
2350   IF F=0 THEN 2460     'Continue Loop to waste (Possible tie)
2360   TIE = FALSE
2370 '  Increment each box in win combo by win value
2380   E=(I-1)*4+65
2390   FOR UPDATE = 0 TO 3
2400     POSITION = A(E+UPDATE)
2410     IF A(POSITION)=0 THEN A(450+POSITION)=A(450+POSITION)+F
2420   NEXT UPDATE
2460 NEXT I
2465 '
2470 REM see if cats game
2480 IF TIE AND (V<>2) THEN 3260
2490 REM get best box now
2510 FOR I=1 TO 64
2520   IF A(450+I)>L THEN L=A(450+I):K=I
2530 NEXT I
2540 REM see if any move found. if not do a random move
2550 WHILE (L=0)
2560   WHILE  (L<1 OR L>64)
2562     L=INT(RND*100)
2564   WEND
2570   IF A(L)=0 THEN K=L ELSE L=0
2580 WEND
2590 REM do computer move in k
2600 GOSUB 2970
2610 RETURN
2620 '
2630 ' Evaluate the situation
2640 '  YV and V on entry
2645 '
2650 Q=0:R=0
2660 REM skip first move on version 1
2670 IF (YZ<3) AND (V>1) THEN 2870
2680 K1LL=0 'if set then we are to get out of do loop
2690 FOR I=1 TO (V<>1)*-76+(V=1)*-10
2700 IF K1LL=1 THEN 2840  'Player won game
2710 E=(I-1)*4+65
2720 F=370+I
2730 C=0
2740 FOR J=0 TO 3
2750 C=C+A(A(J+E))
2760 NEXT J
2820 REM Did computer win
2830 IF C=15 THEN R=I:K1LL=2:GOTO 2840
2840 NEXT I
2850 IF K1LL=1 THEN 3230     'Player won
2860 IF K1LL=2 THEN 2890     'Computer won
2870 RETURN
2880 REM Computer won. find empty box!
2890 FOR H=0 TO 3
2900 C=A(65+H+(R-1)*4)
2910 IF A(C)=0 THEN K=C:H=4
2920 NEXT H			  
2930 REM Execute computers move
2940 GOSUB 2970
2950 REM Tally score
2960 GOTO 3050
2970 '
2980 '   Do computers move specified in K
2990 '
3000 D=K:A(D)=5
3010 GOSUB 2020
3024 DRAW "BM"+STR$(FNX%)+","+STR$(FNY%)+"C1R17G7L17E7BM+2,2P1,1"
3030 COLOR 1:FOR I=1 TO 3:LOCATE 12,2+I*2:PRINT USING "#";COORD(I)+1:NEXT I
3035 GOSUB 3450
3040 RETURN
3050 '
3060 '   Computer won/lost
3070 '
3080 GOSUB 3300    ' Subroutine to mark thru winning boxes
3090 LOSS=LOSS+1
3100 '
3110 'Restart Game
3120 '
3130 OFFSET%=14:GOSUB 3400
3140 GOSUB 5000
3150 PUT(144,1),GRID%,PSET
3160 GOTO 570
3220 REM Computer lost
3230 GOSUB 3300  ' *********  mark the winning boxes
3240 WIN=WIN+1
3250 GOTO 3100
3260 TIE=TIE+1
3280 GOTO 3100
3290 REM
3300 REM mark thru wins
3310 REM
3320 FOR H=0 TO 3:D=A(65+H+(R-1)*4)
3330 GOSUB 2020  ' convert d to rcb
3345 DRAW "BM"+STR$(FNX%)+","+STR$(FNY%)+"C2R17G7L17E7BM+2,2P2,2"
3350 NEXT H:RETURN
3400  COLOR 14:LOCATE OFFSET%,3:PRINT"…ÕÀÕÀÕª";
3405  LOCATE OFFSET%+1,3:PRINT"∫ ∫ ∫ ∫";
3410  LOCATE OFFSET%+2,3:PRINT"»Õ Õ Õº";:RETURN
3450  COLOR 8:LOCATE OFFSET%,3:PRINT"…ÕÀÕÀÕª";
3455  FOR X%=3 TO 9 STEP 2:LOCATE OFFSET%+1,X%:PRINT"∫";:NEXT X%
3460  LOCATE OFFSET%+2,3:PRINT"»Õ Õ Õº";:RETURN
3500 DATA 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,5,9,13,2
3510 DATA 6,10,14
3520 DATA 3,7,11,15,4,8,12,16,1,6,11,16,4,7,10,13,1,22,43,64
3530 DATA 5,22,39,56,9,26,43,60,13,26,39,52,2,22,42,62,14,26
3540 DATA 38,50
3550 DATA 3,23,43,63,15,27,39,51,4,23,42,61,8,23,38,53,12,27
3560 DATA 42,57,16,27,38,49
3570 DATA 1,21,41,61,1,18,35,52,4,19,34,49,4,24,44,64
3580 DATA 13,25,37,49,13,30,47,64,16,31,46,61,16,28,40,52
3590 REM
5000 DIFFL=1:INSTFL=1
5010 FOR I=1 TO 514:A(I)=0:NEXT I
5020 REM
5030 REM setup win array
5040 REM
5050 RESTORE
5060 FOR I=1 TO 10:FOR C=0 TO 3:READ A(65+C+(I-1)*4):NEXT C,I
5070 FOR I=57 TO 76:FOR C=0 TO 3:READ A(65+C+(I-1)*4):NEXT C,I
5080 FOR I=1 TO 3:FOR C=1 TO 10:FOR E=0 TO 3
5090 A(E+65+(C+I*10-1)*4)=A(E+65+(C-1)*4)+16*I
5100 NEXT E,C,I
5110 FOR I=41 TO 56:FOR C=0 TO 3
5120 A(65+C+(I-1)*4)=C*16+I-40:NEXT C,I
5130 V = 3    'V=2 Easy; V=3 Hard
5140 RETURN
6000 PLAY "mbmNT255L64"
6010 FOR OCTAVE%=0 TO 6
6020 PLAY "O"+STR$(OCTAVE%)+";CEGB
6030 NEXT OCTAVE%
6040 PLAY "mST255L64"
6050 FOR OCTAVE%=6 TO 0 STEP -1
6060     PLAY "O"+STR$(OCTAVE%)+";BAGFEDC"
6070 NEXT OCTAVE%
6080 RETURN
