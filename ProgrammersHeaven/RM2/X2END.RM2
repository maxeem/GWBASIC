DECLARE SUB FONT (Msg$, LXP!, LYP!, FC!, BC!, S!, ST!, VT!)
DECLARE SUB Pause (tm!)
COMMON SHARED OLXP
FOR sv = 1 TO 10: XX$ = XX$ + CHR$(SCREEN(1, sv)): NEXT sv: NM1$ = RTRIM$(XX$)
SCREEN 13
CLS
X = 160: Y = 50
DIM A%(32001), B%(2131), C%(84, 2), D%(145, 2), E%(163, 5)
FOR sv = 0 TO 51: READ C%(sv, 0): NEXT sv: FOR svv = 1 TO 2: FOR sv = 0 TO 84: READ C%(sv, svv): NEXT sv, svv
FOR svv = 0 TO 1: FOR sv = 0 TO 145: READ D%(sv, svv): NEXT sv, svv
FOR svv = 0 TO 5: FOR sv = 0 TO 163: READ E%(sv, svv): NEXT sv, svv: E%(1, 4) = 8
DEF SEG = VARSEG(A%(0))
BLOAD "CPLAT.RM2", VARPTR(A%(0))
DEF SEG = VARSEG(B%(0))
BLOAD "REN.RM2", VARPTR(B%(0))
DEF SEG
A%(1) = A%(1) - 1
PUT (0, 0), A%(0), PSET
LINE (0, 179)-(319, 199), 122, BF
FOR sv = -11 TO 11: LINE (9 + sv, 75)-(9 + sv, 194 + SIN(sv) * 5), 31 - ABS(sv): NEXT sv
FOR sv = -11 TO 11: LINE (310 + sv, 75)-(310 + sv, 194 + SIN(sv) * 5), 31 - ABS(sv): NEXT sv
FOR sv = -3 TO 3: LINE (9 + 33 + sv, 60)-(9 + 33 + sv, 180), 24 - ABS(sv): NEXT sv
FOR sv = -3 TO 3: LINE (310 - 33 - sv, 60)-(310 - 33 - sv, 180), 24 - ABS(sv): NEXT sv
'***
PUT (160 - 18 - 5, 170), E%(0, 4), PSET: PUT (160 + 5, 170 - 10), E%(0, 5), PSET
GET (0, 0)-(319, 199), A%(0)
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
FONT "GHOST: ", 25, 15, 44, 56, 4, 2, 1: FONT "HMM... THIS APPEARS TO BE MERAK?", -1, 15, 31, 57, 4, 2, 1
FONT "       ", 25, 22, 44, 56, 4, 2, 1: FONT "INTERESTING!                    ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": A$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
FONT "GHOST: ", 25, 15, 44, 56, 4, 2, 1: FONT "I KNOW EXACTLY WHAT TO DO WITH  ", -1, 15, 31, 57, 4, 2, 1
FONT "       ", 25, 22, 44, 56, 4, 2, 1: FONT "HIM.  NOW WHERE'S A GOOD BOX... ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": A$ = INPUT$(1)
PUT (0, 0), A%(0), PSET
Pause 2
'***
FOR sv = 0 TO 54: GET (0, 0)-(319, 197), A%(0): PUT (0, 2), A%(0), PSET: Pause .01: NEXT sv: GET (0, 0)-(319, 198), A%(0): PUT (0, 1), A%(0), PSET
FOR sv = 154 TO 141 STEP -1: Pause .1: SOUND 40, .1: LINE (135 - ((sv - 140) / 15) * 5, sv)-(185 + ((sv - 140) / 15) * 5, sv), ABS(sv < 149) * (28 - (sv - 140)) + ABS(sv >= 149) * 16: NEXT sv
'***********
FOR sv = 199 TO 184 STEP -1: D%(1, 0) = 200 - sv: PUT (151, sv), D%(0, 0), PSET: Pause .01: NEXT sv
FOR sv = 184 TO 171 STEP -1: LINE (151, sv + 16)-(168, sv + 16), 0: PUT (151, sv), D%(0, 0), PSET: Pause .01: NEXT sv
FOR sv = 0 TO 15: GET (151, 172)-(168, 187), D%(0, 2): PUT (151, 171), D%(0, 2), PSET: Pause .01: NEXT sv
FOR sv = 154 TO 139 STEP -1: D%(1, 0) = 155 - sv: PUT (151, sv), D%(0, 0), PSET: Pause .01: NEXT sv
FOR sv = 138 TO 134 STEP -1: LINE (151, sv + 16)-(168, sv + 16), 0: PUT (151, sv), D%(0, 0), PSET: Pause .01: NEXT sv
'***********
FOR sv = 141 TO 154: Pause .1: SOUND 40, .1
LINE (135 - ((sv - 140) / 15) * 5, sv)-(ABS(sv < 150) * 150 + ABS(sv >= 150) * 168, sv), 28
LINE (169, sv)-(185 + ((sv - 140) / 15) * 5, sv), 28
NEXT sv
GET (150, 134)-(169, 149), A%(0): FOR sv = 0 TO 15: PUT (150 + ABS(sv MOD 4 <> 3) * (sv MOD 4 - 1), 134), A%(0), PSET: SOUND 100, .5: Pause .1: NEXT sv: PLAY "l64n3n4n2n5n1": PUT (151, 134), D%(0, 1), PSET
LINE (159, 141)-(160, 141), 31: Pause .5: FOR svv = 0 TO 1: FOR sv = 0 TO 19: LINE (160 - sv, 141 - sv / 3)-(160 + sv, 141 - sv / 3), 31 - svv * 3: LINE (160, 141 - sv)-(160 + sv, 141 + sv), 31 - svv * 3: LINE (160, 141 - sv)-(160 - sv, 141 + sv),  _
31 - svv * 3: Pause .01: NEXT sv, svv: PUT (151, 132), E%(0, 0), PSET
GET (0, 101)-(319, 199), A%(0)
FOR sv = -20 TO 20: PUT (0, 96 - INT(RND * 10) + 5), A%(0), PSET: Pause .01: SOUND 40, .1: svv = 20 - ABS(sv)
LINE (164 - 20, 49)-(164 + 20, 49), 0: LINE (164, 49 - 20)-(164, 49 + 20), 0: LINE (164 - svv, 49)-(164 + svv, 49), 31: LINE (164, 49 - svv)-(164, 49 + svv), 31
LINE (164 - 10, 49 - 10)-(164 + 10, 49 + 10), 0: LINE (164 + 10, 49 - 10)-(164 - 10, 49 + 10), 0: LINE (164 - svv \ 2, 49 - svv \ 2)-(164 + svv \ 2, 49 + svv \ 2), 31: LINE (164 + svv \ 2, 49 - svv \ 2)-(164 - svv \ 2, 49 + svv \ 2), 31
NEXT sv
PUT (0, 101), A%(0), PSET
XInc = 40: YInc = 10: SInc = 1
'DLG = 12
1
Inc = Inc + .1
IF Inc >= 6.14 THEN Inc = 0: SInc = -SInc: XInc = INT(RND * 30) + 40: YInc = INT(RND * 5) + 9: SF = 0: DSF = 0: IF ESeq = 1 THEN GOTO ESequ
IF Inc >= 3.14 AND SF = 0 AND SInc = 1 THEN SF = 1: GOSUB Swing
IF ((Inc >= 1.57 AND SInc = 1) OR (Inc >= 4.71 AND SInc = -1)) AND DLG < 13 AND DSF = 0 THEN DSF = 1: DLG = DLG + 1: READ Spk$, Dia$: FONT Spk$, 10, 10, 44, 21, 4, 2, 1: FONT Dia$, -1, 10, 31, 21, 4, 2, 1: A$ = INPUT$(1): LINE (10, 10)-(319, 20), 0 _
, BF: IF DLG = 13 THEN ESeq = 1: GOSUB Jump: GOSUB Jump: GOSUB Jump: GOSUB Jump: FOR sv = 132 TO 143: LINE (151, sv - 1)-(168, sv - 1), 28: PUT (151, sv), E%(0, 0), PSET: Pause .1: NEXT sv ELSE IF DLG = 6 THEN GOSUB Jump
OX = X
X = 160 + SIN(Inc) * XInc: Y = 39 + COS(Inc) * YInc
IF SF2 > 0 THEN SF2 = SF2 - 1: OX = X - (X - OX) / 2
Pause .01
PUT (X - 36, Y - 25), B%(0), PSET
LINE (X - 75, Y + 35)-(X + 75, 114), 0, BF
FOR sv = 1 TO 5
ssv = (sv / 5) * 1.07
IF (((Y - 4 - 25 + COS(ssv) * (100)) < 105) AND sv <> 1) OR (((Y - 4 - 25 + COS(ssv) * (100)) < 100)) THEN PUT (X - 5 + ((OX - X)) * ((5 - sv) * 2), Y - 4 - 25 + COS(ssv) * (100)), C%(0, ABS(sv = 1)), PSET
NEXT sv
DO: LOOP UNTIL INKEY$ = ""
GOTO 1
Swing:
LINE (X - 85, Y + 35)-(X + 85, 114), 0, BF
SF2 = 10
FOR svv = 5 TO 0 STEP -1
LINE (X - 65, Y + 35)-(X + 65, 114), 0, BF
FOR sv = 1 TO 5
ssv = (sv / 5) * 1.07
IF (((Y - 4 - 25 + COS(ssv) * (100)) < 105) AND sv <> 1) OR (((Y - 4 - 25 + COS(ssv) * (100)) < 100)) THEN PUT (X - 5 + ((svv)) * ((5 - sv) * 2), Y - 4 - 25 + COS(ssv) * (100)), C%(0, ABS(sv = 1)), PSET
NEXT sv, svv
FOR xsvv = -1 TO 1 STEP .2
svv = 1 - ABS(xsvv)
Pause .05
PUT (X - 36, Y - 25), B%(0), PSET
LINE (X - 20, Y + 35)-(X + 20, Y + 85), 0, BF
FOR sv = 1 TO 5
ssv = ((6 - sv) / 5) * 1.07
PUT (X - 5, Y - 4 - 25 - svv * 60 + COS(ssv - svv) * (100 + svv)), C%(0, ABS(sv = 5) * 2), PSET
NEXT sv, xsvv
sv = 5: ssv = ((6 - sv) / 5) * 1.07: PUT (X - 5, Y - 4 - 25 - svv * 60 + COS(ssv - svv) * (100 + svv)), C%(0, ABS(sv = 5)), PSET
RETURN
LoadIt:
OPEN Ld$ FOR INPUT AS #1
IF RM = 0 THEN
FOR svy = 0 TO 17
FOR svx = 0 TO 17
INPUT #1, XX
PSET (svx, svy), XX
NEXT svx, svy
ELSE
FOR svy = 17 TO 0 STEP -1
FOR svx = 0 TO 17
INPUT #1, XX
PSET (svx, svy), XX
NEXT svx, svy
END IF
CLOSE #1
RETURN
Jump:
LINE (151, 147)-(168, 150), 28, BF: CIRCLE (160, 149), 8, 16, , , 1 / 7: LINE (152, 149)-(168, 149), 16
FOR sv = 127 TO 118 STEP -3: PUT (151, sv), E%(0, 1), PSET: LINE (151, sv + 17)-(168, sv + 19), 28, BF: Pause .01: NEXT sv: Pause .1
FOR sv = 121 TO 133 STEP 3: PUT (151, sv), E%(0, 1), PSET: LINE (151, sv - 1)-(168, sv - 3), 28, BF: Pause .01: NEXT sv
PUT (151, 132), E%(0, 0), PSET: LINE (151, 150)-(168, 150), 28
RETURN
ESequ:
FOR sv = 143 TO 116 STEP -3: PUT (151, sv), E%(0, 2 + (sv AND 1)), PSET: LINE (151, sv + 17)-(168, sv + 19), 28, BF: Pause .15: NEXT sv: PUT (151, 116), E%(0, 0), PSET
PUT (151, 116), E%(0, 1), PSET
Pause 1
LINE (150, 134)-(150, 134), 24: FOR sv = 150 TO 178 STEP 2: LINE -(sv, 134 + INT(RND * 4)), 24: Pause .1: SOUND 40, .1: NEXT sv: LINE -(180, 134), 24
FOR svv = 116 TO 133
Pause .01: SOUND 400, .1
FOR ssv = 150 TO 116 STEP -1
IF POINT(ssv, svv) = 24 THEN xsv = ssv: EXIT FOR
NEXT ssv
SD = 0: PP = 28
FOR sv = xsv + 1 TO 185
IF POINT(sv, svv) = 28 THEN PSET (sv, svv), 0
IF POINT(sv, svv) = 24 THEN EXIT FOR
NEXT sv, svv
FOR svv = 134 TO 137
Pause .01: SOUND 400, .1: SD = 1: PP = 28
FOR sv = 150 TO 180
IF POINT(sv, svv) = 24 AND PP <> 24 THEN SD = -SD
PP = POINT(sv, svv)
IF SD = -1 THEN PSET (sv, svv), 0
NEXT sv
NEXT svv
svs = 1: FOR ssv = 0 TO 1: FOR svv = 176 TO 205 STEP 5: SOUND 400, .1 * ABS(svv AND 1): FOR sv = 150 TO 170 STEP 10: svs = -svs: LINE (sv, svv - 5 + ABS(svs = 1) * 5)-(sv + 7, svv + 5 + ABS(svs = 1) * 5), 0, BF: LINE (sv, svv + ABS(svs = -1) * 5)-( _
sv + 7, svv + 6 + ABS(svs = -1) * 5), 26, BF: NEXT sv: Pause .01: NEXT svv, ssv
FOR sv = -20 TO 20 STEP 5: DRAW "bm159," + STR$(87 + ABS(sv)) + "c44rd2lu2d2bd2c44rdl": Pause .01: LINE (159, 87 + ABS(sv))-(160, 92 + ABS(sv)), 0, B: NEXT sv
FOR sv = 116 TO 110 STEP -1: GET (151, sv)-(168, sv + 17), A%(0): LINE (151, sv + 17)-(168, sv + 17), 0: PUT (151, sv - 1), A%(0), PSET: Pause .01: NEXT sv
FOR sv = 109 TO 133 STEP 2: GET (151, sv - 2)-(168, 132), A%(0): PUT (151, sv), A%(0), PSET: Pause .01: NEXT sv
Pause .5
FOR sv = 176 TO 191 STEP 2: LINE (151, sv - 2)-(168, sv + 6), 0, BF: PUT (151, sv), E%(0, 4), PSET: Pause .01: NEXT sv
FOR sv = 190 TO 199 STEP 2: GET (151, sv - 2)-(168, 197), A%(0): PUT (151, sv), A%(0), PSET: Pause .01: NEXT sv
Pause .5: FOR sv = 319 TO 0 STEP -1: LINE (sv, 0)-(319 - sv, 199), 21 + (sv / 319) * 10: NEXT sv: FOR sv = 0 TO 199: LINE (0, sv)-(319, 199 - sv), 21 + (sv / 319) * 10: NEXT sv: FOR sv = 319 TO 0 STEP -1: LINE (sv, 0)-(319 - sv, 199), 0: NEXT sv:  _
FOR sv = 0 TO 199: LINE (0, sv)-(319, 199 - sv), 0: NEXT sv
'*****************************************************************************
3
VIEW SCREEN (0, 0)-(319, 192)
FOR svv = 0 TO 15
FOR sv = 0 TO 320 STEP 10
PSET (sv, TAN(sv * (svv MOD 50)) * 25 + 199), 31
NEXT sv
GET (0, 7)-(319, 199), A%(0): PUT (0, 0), A%(0), PSET
PUT (151, 96), E%(0, 4), PSET
LINE (151, 40)-(168, 48), 0, BF: Pause .01
NEXT svv
FOR sv = 39 TO 87 STEP 8
LINE (151, sv)-(168, sv + 8), 0, BF: Pause .01
LINE (0, 200 - ((sv - 39) / 48) * 96)-(319, 200 - ((sv - 39) / 48) * 96 + 15), 122, BF
NEXT sv
PLAY "l64n1n5n2n4n3"
Pause 2
Pause .5: FOR sv = 319 TO 0 STEP -1: LINE (sv, 0)-(319 - sv, 199), 21 + (sv / 319) * 10: NEXT sv: FOR sv = 0 TO 199: LINE (0, sv)-(319, 199 - sv), 21 + (sv / 319) * 10: NEXT sv: FOR sv = 319 TO 0 STEP -1: LINE (sv, 0)-(319 - sv, 199), 0: NEXT sv:  _
FOR sv = 0 TO 199: LINE (0, sv)-(319, 199 - sv), 0: NEXT sv: Pause 1
CLS : SCREEN 12: SCREEN 0: COLOR 0: PRINT NM1$
RUN "X3END.rm2"

DATA &H58,&H9,&H0,&H0,&H2828,&H28,&H0,&H0,&H2800,&H2A28,&H2A2A,&H2828,&H0,&H2800,&H2A2A,&H2B2B,&H2A2B,&H282A,&H2800,&H2A29,&H2B2B,&H2B2C,&H2A2B,&H2829,&H2928,&H2B2A,&H1F2C,&H2B2C,&H292A,&H2828,&H2A29,&H2B2B,&H2B2C,&H2A2B,&H2829,&H2800,&H2A2A,&H2B2B,&H2A2B,&H282A,&H0,&H2800,&H2A28,&H2A2A,&H2828,&H0,&H0,&H0,&H2828,&H28,&H0,&H0
DATA &H58,&HF,&H0,&H0,&H2828,&H28,&H0,&H0,&H2800,&H2A28,&H2A2A,&H2828,&H0,&H2800,&H2A2A,&H2B2B,&H2A2B,&H282A,&H2800,&H2A29,&H2B2B,&H2B2C,&H2A2B,&H2829,&H2936,&H2B2A,&H1F2C,&H2B2C,&H292A,&H3634,&H3435,&H2B2B,&H2B2C,&H342B,&H3434,&H3600,&H3435,&H2B34,&H3434,&H3535,&H0,&H3600,&H3535,&H3534,&H3535,&H0,&H0,&H3600,&H3536,&H3636,&H0,&H0,&H0,&H3700,&H3636,&H0,&H0,&H0,&H0,&H3737,&H36,&H0,&H0,&H0,&H0,&H36,&H0,&H0,&H0,&H3400,&H3434,&H3434,&H0,&H0,&H0,&H3600,&H3435,&H0,&H0,&H0,&H0,&H3600,&H0,&H0,&H0
DATA &H58,&HF,&H0,&H0,&H3600,&H0,&H0,&H0,&H0,&H3600,&H3435,&H0,&H0,&H0,&H3400,&H3434,&H3434,&H0,&H0,&H0,&H0,&H36,&H0,&H0,&H0,&H0,&H3737,&H36,&H0,&H0,&H0,&H3700,&H3636,&H0,&H0,&H0,&H3600,&H3536,&H3636,&H0,&H0,&H3600,&H3535,&H3534,&H3535,&H0,&H3600,&H3435,&H2B34,&H3434,&H3535,&H3600,&H3435,&H2B2B,&H2B2C,&H342B,&H3434,&H2936,&H2B2A,&H1F2C,&H2B2C,&H292A,&H2834,&H2A29,&H2B2B,&H2B2C,&H2A2B,&H2829,&H2800,&H2A2A,&H2B2B,&H2A2B,&H282A,&H0,&H2800,&H2A28,&H2A2A,&H2828,&H0,&H0,&H0,&H2828,&H28,&H0,&H0
DATA &H90,&H10,&H7410,&H7474,&H3410,&H7410,&H7474,&H1074,&H1034,&H7474,&H1074,&H7310,&H7373,&H3410,&H7310,&H7373,&H1073,&H1034,&H7373,&H1073,&H7410,&H7474,&H3510,&H7410,&H7474,&H1074,&H1035,&H7474,&H1074,&H7310,&H3A1F,&H3510,&H7310,&H3C1F,&H1073,&H1035,&H3A1F,&H1073,&H7410,&H3C3A,&H3610,&H7410,&H3A3C,&H1074,&H1036,&H3C3A,&H1074,&H7210,&H7272,&H3610,&H7210,&H7272,&H1072,&H1036,&H7272,&H1072,&H7310,&H7373,&H3610,&H7310,&H7373,&H1073,&H1036,&H7373,&H1073,&H7210,&H7272,&H3710,&H7210,&H7272,&H1072,&H1037,&H7272,&H1072,&H1010,&H1010,&H3710,&H1010,&H1010,&H1010,&H1037,&H1010,&H1010,&H3710,&H3737,&H3737,&H1037,&H1F1F,&H3710,&H3737,&H3737,&H1037,&H1010,&H1010,&H1010,&H1F10,&H2C2C,&H101F,&H1010,&H1010,&H1010,&H7210,&H7272,&H7272,&H2C72,&H2B2B,&H722C,&H7272,&H7272,&H1072,&H7310,&H7373,&H7373,&H2B73,&H2323,&H732B,&H7373,&H7373,&H1073,&H7210,&H7272,&H7272,&H2A72,&H2A2A,&H722A,&H7272,&H7272,&H1072,&H7310,&H7373,&H7373,&H7373,&H7373,&H7373,&H7373,&H7373,&H1073,&H1010,&H1010,&H1010,&H1010,&H1010,&H1010,&H1010,&H1010,&H1010

DATA &H90,&H12,&H1C1C,&H1C1C,&H1C1C,&H7474,&H7474,&H7474,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H741C,&H7374,&H7373,&H7273,&H1C72,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H7441,&H7473,&H7273,&H7272,&H4171,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H7441,&H7373,&H7272,&H7172,&H4171,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H411C,&H7272,&H7172,&H7171,&H1C41,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H371C,&H4141,&H4141,&H4141,&H1C20,&H1C1C,&H1C1C,&H1C1C,&H1F1C,&H2B2C,&H3737,&H2037,&H2020,&H2C1F,&H1C2C,&H1C1C,&H1C1C,&H2C1F,&H372B,&H3736,&H2036,&H3620,&H2C20,&H2B2B,&H1C1C,&H1C1C,&H2B2C,&H372A,&H3736,&H2036,&H3636,&H2B20,&H2A2A,&H1C1C,&H1C1C,&H2A4B,&H372A,&H3637,&H2036,&H3636,&H2A37,&H4B2A,&H1C1C,&H1C1C,&H294C,&H3737,&H3637,&H2036,&H3620,&H2036,&H4C29,&H1C1C,&H1C1C,&H4E4D,&H3737,&H3736,&H3636,&H3620,&H2036,&H4D4E,&H1C1C,&H1C1C,&H4F4E,&H3637,&H3636,&H3637,&H2036,&H2036,&H4E4F,&H1C1C,&H1C1C,&H4141,&H3637,&H3636,&H3636,&H3620,&H2036,&H4141,&H1C1C,&H1C1C,&H1C1C,&H3637,&H3736,&H3636,&H3620,&H2020,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H371C,&H3736,&H3637,&H3620,&H1C20,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H3737,&H3636,&H3637,&H3620,&H2036,&H1C1C,&H1C1C,&H1C1C,&H371C,&H3637,&H3737,&H3736,&H2036,&H3636,&H1C20,&H1C1C
DATA &H90,&H12,&H1C1C,&H1C1C,&H1C1C,&H7474,&H7474,&H7474,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H741C,&H7374,&H7373,&H7273,&H1C72,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H7441,&H7473,&H7273,&H7272,&H4171,&H4040,&H1C1C,&H1C1C,&H1C1C,&H7441,&H7373,&H7272,&H7172,&H4171,&H4E4F,&H1C1C,&H1C1C,&H1C1C,&H411C,&H7272,&H7172,&H7171,&H1C41,&H4D4E,&H1C1C,&H1C1C,&H1C1C,&H371C,&H4141,&H4141,&H4141,&H1C20,&H4C4D,&H1C1C,&H1C1C,&H1F1C,&H2B2C,&H3737,&H2037,&H2020,&H2C1F,&H4B2C,&H1C1C,&H1C1C,&H2C1F,&H372B,&H3736,&H2036,&H3620,&H2C20,&H2B2B,&H1C1C,&H1C1C,&H2B2C,&H372A,&H3736,&H2036,&H3636,&H2B20,&H2A2A,&H1C1C,&H1C1C,&H2A4B,&H372A,&H3637,&H2036,&H3636,&H2A37,&H2A2A,&H1C1C,&H1C1C,&H294C,&H3737,&H3637,&H2036,&H3620,&H2936,&H1C29,&H1C1C,&H1C1C,&H4E4D,&H3737,&H3736,&H3636,&H3620,&H2036,&H1C1C,&H1C1C,&H1C1C,&H4F4E,&H3637,&H3636,&H3637,&H2036,&H2036,&H1C1C,&H1C1C,&H1C1C,&H4141,&H3637,&H3636,&H3636,&H3620,&H2036,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H3637,&H3736,&H3636,&H3620,&H2020,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H371C,&H3736,&H3637,&H3620,&H1C20,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H3737,&H3636,&H3637,&H3620,&H2036,&H1C1C,&H1C1C,&H1C1C,&H371C,&H3637,&H3737,&H3736,&H2036,&H3636,&H1C20,&H1C1C
DATA &H90,&H12,&H1C1C,&H1C1C,&H1C1C,&H7474,&H7474,&H7474,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H741C,&H7374,&H7373,&H7273,&H1C72,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H7441,&H7473,&H7273,&H7272,&H4171,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H7441,&H7373,&H7272,&H7172,&H4171,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H411C,&H7272,&H7172,&H7171,&H1C41,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H371C,&H4141,&H4141,&H4141,&H1C37,&H1C1C,&H1C1C,&H1C1C,&H1F1C,&H2B2C,&H3737,&H3737,&H3737,&H2C1F,&H1C2C,&H1C1C,&H3736,&H2C1F,&H372B,&H3636,&H3737,&H3736,&H2C37,&H2B2B,&H3637,&H3737,&H3637,&H3736,&H3737,&H3737,&H3737,&H3637,&H3736,&H3737,&H2037,&H3737,&H2037,&H2020,&H2020,&H2020,&H3720,&H3737,&H3720,&H2037,&H2020,&H2020,&H2020,&H2020,&H2020,&H2020,&H2020,&H3720,&H1C37,&H201C,&H2020,&H2020,&H2020,&H2020,&H2020,&H1C20,&H371C,&H1C1C,&H1C1C,&H231C,&H233A,&H233A,&H2338,&H1C38,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H3A1C,&H3A23,&H3A23,&H3823,&H1C23,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H231C,&H233A,&H233A,&H411C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H4141,&H1C41,&H1F1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1F1F,&H1C1F,&H721C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H7373,&H1C73,&H1C1C,&H1C1C,&H1C1C,&H1C1C
DATA &H90,&H12,&H1C1C,&H1C1C,&H1C1C,&H7474,&H7474,&H7474,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H741C,&H7374,&H7373,&H7273,&H1C72,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H7441,&H7473,&H7273,&H7272,&H4171,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H7441,&H7373,&H7272,&H7172,&H4171,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H411C,&H7272,&H7172,&H7171,&H1C41,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H371C,&H4141,&H4141,&H4141,&H1C37,&H1C1C,&H1C1C,&H1C1C,&H1F1C,&H2B2C,&H3737,&H3737,&H3737,&H2C1F,&H1C2C,&H1C1C,&H1C1C,&H2C1F,&H372B,&H3636,&H3637,&H3636,&H2C37,&H2B2B,&H1C1C,&H361C,&H3637,&H3636,&H3736,&H3636,&H3637,&H3636,&H3736,&H1C36,&H3736,&H3737,&H3637,&H3637,&H3637,&H3736,&H3736,&H3737,&H3637,&H2037,&H2020,&H3720,&H3737,&H3737,&H3737,&H2037,&H2020,&H3720,&H1C37,&H201C,&H2020,&H2020,&H2020,&H2020,&H2020,&H1C20,&H371C,&H1C37,&H1C1C,&H231C,&H2020,&H2020,&H2020,&H1C3A,&H1C1C,&H371C,&H1C1C,&H1C1C,&H381C,&H3823,&H3A23,&H3A23,&H1C23,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C41,&H233A,&H233A,&H1C3A,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1F,&H411C,&H4141,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C72,&H1F1C,&H1F1F,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H731C,&H7373,&H1C1C,&H1C1C,&H1C1C
DATA &H90,&H12,&H37,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H3636,&H3637,&H3637,&H0,&H0,&H0,&H0,&H0,&H0,&H3637,&H3736,&H3737,&H3636,&H3737,&H3736,&H7136,&H7171,&H72,&H3736,&H3636,&H3736,&H3636,&H3636,&H2C2A,&H3736,&H7272,&H7372,&H3636,&H3636,&H3636,&H4B36,&H2A4C,&H2B2A,&H372C,&H4141,&H7473,&H3737,&H4036,&H4948,&H4B4A,&H294C,&H2B2A,&H372C,&H7441,&H7474,&H3720,&H4037,&H4948,&H4B4A,&H294C,&H2B2A,&H372C,&H4141,&H4141,&H2020,&H2020,&H2020,&H2020,&H2020,&H2B2A,&H3720,&H4141,&H1F,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0,&H0
DATA &H90,&H12,&H0,&H0,&H0,&H1919,&H1919,&H1919,&H0,&H0,&H0,&H0,&H0,&H1900,&H1919,&H1919,&H1919,&H19,&H0,&H0,&H0,&H0,&H1D00,&H1919,&H1919,&H1919,&H19,&H0,&H0,&H0,&H0,&H1D00,&H191D,&H1919,&H1919,&H19,&H0,&H0,&H0,&H0,&H1D00,&H191D,&H1919,&H1919,&H0,&H0,&H0,&H0,&H0,&H0,&H1919,&H1919,&H19,&H0,&H0,&H0,&H0,&H0,&H1900,&H1919,&H1919,&H1919,&H0,&H0,&H0,&H0,&H0,&H1900,&H1719,&H1917,&H1919,&H0,&H0,&H0,&H0,&H1D00,&H1717,&H1717,&H1917,&H1919,&H0,&H0,&H0,&H0,&H1D00,&H1717,&H1717,&H1919,&H1919,&H0,&H0,&H0,&H0,&H0,&H0,&H1919,&H1919,&H1919,&H0,&H0,&H0,&H0,&H0,&H0,&H1B00,&H1B1B,&H1B,&H0,&H0,&H0,&H0,&H0,&H0,&H1919,&H1919,&H1919,&H0,&H0,&H0,&H0,&H0,&H1900,&H1919,&H1919,&H1919,&H0,&H0,&H0,&H0,&H0,&H1900,&H1919,&H1919,&H1919,&H19,&H0,&H0,&H0,&H0,&H1900,&H1919,&H1919,&H1919,&H1919,&H0,&H0,&H0,&H0,&H1919,&H1919,&H1919,&H1919,&H1919,&H1919,&H0,&H0,&H1900,&H1919,&H1919,&H1919,&H1919,&H1919,&H1919,&H19
DATA "MERAK: ","R-RIGOR MORTIS?","BIG GUY: ","RIGOR MORTIS IS GONE! I AM NOW..."
DATA "MORPHIS: ","RIGOR MORPHIS!","MERAK: ","BUT DUBHE AND I...","MORPHIS: ","YES... AND HERE IS MY REVENGE!"
DATA "MERAK: ","REVENGE?!","MERAK: ","SO THAT'S WHY I WAS BROUGHT UP HERE!"
DATA "MORPHIS: ","REAL QUICK, MERAK.  REAL QUICK.","MERAK: ","MY MENTAL SPEED SURPASSES ALL OTHERS."
DATA "MORPHIS: ","YOU BORE ME, MERAK.","MORPHIS: ","I WILL MAKE THIS SHORT AND SWEET."
DATA "MERAK: ","IF I AM GOING TO DIE...","MERAK: ","IT WILL BE IN BATTLE!"
'FOR sv = 132 TO 143: LINE (151, sv - 1)-(168, sv - 1), 28: PUT (151, sv), E%(0, 0), PSET: Pause .1: NEXT sv
'FOR sv = 143 TO 116 STEP -3: PUT (151, sv), E%(0, 2 + (sv AND 1)), PSET: LINE (151, sv + 17)-(168, sv + 19), 28, BF: Pause .15: NEXT sv: PUT (151, 116), E%(0, 0), PSET

SUB FONT (Msg$, LXP, LYP, FC, BC, S, ST, VT)
IF LXP = -1 THEN LXP = OLXP
IF LYP = -1 THEN LYP = OLYP
IF LXP = -2 THEN
M$ = ""
FOR sv = 1 TO LEN(Msg$)
IF MID$(Msg$, sv, 1) = "^" THEN sv = sv + 1 ELSE M$ = M$ + MID$(Msg$, sv, 1)
NEXT sv
LXP = INT((319 - LEN(M$) * 7) / 2)
END IF
IF LYP = -2 THEN LYP = CINT(((39 - 5) / 2) * 5)
U = -1: OLXP = LXP: OLYP = LYP
A$ = STR$(LXP): B$ = STR$(LYP): BC$ = STR$(BC): FC$ = STR$(FC): S$ = STR$(S)
Msg$ = UCASE$(Msg$)
FOR sv = 1 TO LEN(Msg$)
SELECT CASE MID$(Msg$, sv, 1)
CASE "A"
M1$ = "u2e2f2l4r4d2"
CASE "B"
M1$ = "u4r3fgl2r2fgl3"
CASE "C"
M1$ = "brr3l3hu2er3"
CASE "D"
M1$ = "u4r3fd2gl3"
CASE "E"
M1$ = "u4r4l4d2r2l2d2r4"
CASE "F"
M1$ = "u4r4l4d2r2"
CASE "G"
M1$ = "brr3l3hu2er3l3gd2fr3u2l2"
CASE "H"
M1$ = "u4d2r4u2d4"
CASE "I"
M1$ = "r4l2u4l2r4"
CASE "J"
M1$ = "brhfr2eu3"
CASE "K"
M1$ = "u4d3e3g2f2"
CASE "L"
M1$ = "u4d4r4"
CASE "M"
M1$ = "u4f2e2d4"
CASE "N"
M1$ = "u4f4u4"
CASE "O"
M1$ = "brhu2er2fd2gl2"
CASE "P"
M1$ = "u4r3fgl3"
CASE "Q"
M1$ = "brhu2er2fd2dhfl3"
CASE "R"
M1$ = "u4r3fgl3r2f2"
CASE "S"
M1$ = "r3ehl2her3"
CASE "T"
M1$ = "br2u4l2r4"
CASE "U"
M1$ = "brhu3d3fr2eu3"
CASE "V"
M1$ = "br2h2u2d2f2e2u2"
CASE "W"
M1$ = "buu3d3fefeu3"
CASE "X"
M1$ = "e4g2f2h4"
CASE "Y"
M1$ = "br2u2e2g2h2f2"
CASE "Z"
M1$ = "r4l4e4l4"
CASE ":"
M1$ = "br2rulbu2rul"
CASE "."
M1$ = "br2r"
CASE "!"
M1$ = "br2rbu2u2ld2"
CASE "?"
M1$ = "br2rbu2lrehl2g"
CASE ","
M1$ = "relur"
CASE "'"
M1$ = "brbu2relur"
CASE "/"
M1$ = "e4"
CASE "("
M1$ = "br3hu2e"
CASE ")"
M1$ = "breu2h"
CASE "-"
M1$ = "bu2brr2"
CASE "1"
M1$ = "brr2lu4l"
CASE "2"
M1$ = "r4l4uer2ehl3"
CASE "3"
M1$ = "bufr2eheul4"
CASE "4"
M1$ = "br3u4g3r4"
CASE "5"
M1$ = "r3ehl3u2r4"
CASE "6"
M1$ = "bufr2ehl3uer3"
CASE "7"
M1$ = "br2ue2ul4"
CASE "8"
M1$ = "bufr2ehl2her2f"
CASE "9"
M1$ = "brr2eu2hl2gfr2"
CASE "0"
M1$ = "bufr2eu2hl2gd2bre2"
CASE "^"
IF MID$(Msg$, sv + 1, 1) = "N" THEN LYP = LYP + 5 + VT: LXP = OLXP: B$ = STR$(LYP): A$ = STR$(LXP)
IF MID$(Msg$, sv + 1, 1) = "U" THEN U = -U
M1$ = "": sv = sv + 1: LXP = LXP - 5 - ST
CASE ELSE
END SELECT
IF U = 1 THEN DRAW "s" + S$ + "bm" + A$ + "," + B$ + "c" + BC$ + "bd5brr" + STR$(4 + ST) + "bm" + A$ + "," + B$ + "c" + FC$ + "bd6r" + STR$(4 + ST)
DRAW "s" + S$ + "bm" + A$ + "," + B$ + "c" + BC$ + "bd4br" + M1$ + "bm" + A$ + "," + B$ + "c" + FC$ + "bd5" + M1$
LXP = LXP + 5 + ST
A$ = STR$(LXP): B$ = STR$(LYP)
M1$ = ""
NEXT sv
LYP = LYP + 5 + VT
OLXP = LXP: OLYP = LYP
END SUB

SUB Pause (tm)
tmr = TIMER + tm
DO UNTIL TIMER >= tmr
LOOP
END SUB

