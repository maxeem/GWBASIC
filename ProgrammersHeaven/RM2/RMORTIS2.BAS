'-----------------------------
'  Rigor Mortis 2
'  by Aedes
'
'  (C) 1996  Aaron Kuhuski
'
'  But go ahead and spread it around!  I like it that way...
'
'-----------------------------
'
'NOTE: Read the DOC to find out about special attacks, and how to play.
'      Reading 'em helps once in a while...
'
'-----------------------------
'WEAPONS/SPELLS******
   'Rigor:
DECLARE SUB Nuke (SD!)
DECLARE SUB Shrapnel (SD!)
   'Mortis:
DECLARE SUB SStrike (SD!)
DECLARE SUB CExplode (SD!)
   'Ryan:
DECLARE SUB LShock (SD!)
DECLARE SUB Obfuscate (SD!)
   'Aedes:
DECLARE SUB HarmBall (SD!)
DECLARE SUB Dispel (SD!)
   'Minerva:
DECLARE SUB HealBall (SD!)
DECLARE SUB CtrlBall (SD!)
   'Siezure:
DECLARE SUB FireBall (SD!)
DECLARE SUB EStream (SD!)
   'Raiden:
DECLARE SUB HSword (SD!)
DECLARE SUB Lance (SD!)
   'Piranha:
DECLARE SUB Focus (SD!)
DECLARE SUB Distort (SD!)
   'Allegro:
DECLARE SUB Laser (SD!)
DECLARE SUB Gravis (SD!)
   'Dubhe:
DECLARE SUB SuperNova (SD!)
   'AedesX:
DECLARE SUB FireStorm (SD!)
DECLARE SUB BlockHeat (SD!)
   'Unison
DECLARE SUB EyeHeal (SD!)

'OTHER SUBS******
DECLARE SUB Intro3 ()
DECLARE SUB Intro2 ()
DECLARE SUB TClip (XX!, YY!, S%(), CLP!)
DECLARE SUB Intro1 ()
DECLARE SUB Intro ()
DECLARE SUB Stat (SD!)
DECLARE SUB ILoad (Msg$)
DECLARE SUB SPRINT (Msg$, LXP!, LYP!, FC!, BC!, S!, ST!, VT!)
DECLARE SUB TDelay (tm!)
COMMON SHARED GRV, GRVC, Y1, Y2, PL1, PL2, BLN, OLXP, NM0$, NM1$, FirW1, FirW2, BL, OBF, BX, BY
DIM SHARED a%(32001), C%(163, 14), D%(129, 2), PP(19, 11), PD1%(82, 20), PD2%(82, 20), B%(42, 3), B2%(42), MHP(1), MMP(1), HP(1), MP(1), WY(1), WX(1), SWeap(1)
ON ERROR GOTO DErr
OPEN "LOCATOR.RM2" FOR INPUT AS #1: CLOSE #1
IF SCREEN(1, 1) >= 230 THEN SEFlag = 1: PL2 = SCREEN(1, 1) - 230: XL1 = SCREEN(1, 2) - 230: FOR sv = 3 TO 13: XX$ = XX$ + CHR$(SCREEN(1, sv)): NEXT sv: NM1$ = RTRIM$(XX$): TNM = 1
SCREEN 13
CLS
IF SEFlag = 0 THEN
SPRINT "SEE INTRO? (Y/N)", -2, -2, 31, 22, 4, 2, 1
AAsk: a$ = UCASE$(INPUT$(1)): IF a$ = "Y" THEN Intro ELSE IF a$ <> "N" THEN GOTO AAsk
ILoad "TITLE.RM2": PUT (0, 0), a%, PSET
FOR svv = 0 TO 63 STEP 6: TDelay .005: FOR sv = 17 TO 19: PALETTE sv, INT(svv / (sv - 16)): TDelay .001: NEXT sv, svv
END IF
OPEN "RM2.DAT" FOR INPUT AS #1: FOR svv = 0 TO 14: FOR sv = 0 TO 163: INPUT #1, C%(sv, svv): NEXT sv, svv: FOR svv = 0 TO 2: FOR sv = 0 TO 129: INPUT #1, D%(sv, svv): NEXT sv, svv: CLOSE #1
RESTORE: FOR svv = 0 TO 3: FOR sv = 0 TO 42: READ B%(sv, svv): NEXT sv, svv
IF SEFlag = 1 THEN Levl = 4: GOTO BossPickup
a$ = INPUT$(1): CLS
StartPong:
WIN1 = 0: WIN2 = 0
PALETTE
ILoad "PAT1.RM2": PUT (0, 0), a%, PSET
LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel AND 1) * 100, 78 + (Sel \ 2) * 23), 31, B
PLCNT = 0: PL1 = -1: SPl = -1
CChs:
DO: LOOP UNTIL INKEY$ = ""
DO: Ky$ = INKEY$: LOOP WHILE Ky$ = ""
MSel = Sel
IF Ky$ = CHR$(0) + "H" THEN Sel = Sel - 2: IF Sel < 0 THEN Sel = 8 + Sel
IF Ky$ = CHR$(0) + "P" THEN Sel = Sel + 2: IF Sel > 7 THEN Sel = Sel - 8
IF Ky$ = CHR$(0) + "K" THEN IF (Sel AND 1) = 1 THEN Sel = Sel - 1 ELSE Sel = Sel + 1
IF Ky$ = CHR$(0) + "M" THEN IF (Sel AND 1) = 0 THEN Sel = Sel + 1 ELSE Sel = Sel - 1
Xy$ = Xy$ + CHR$(ASC(UCASE$(Ky$)) + 100)
IF LEN(Xy$) > 7 THEN Xy$ = RIGHT$(Xy$, 7)
'****Looking for cheats or codes?  HAHAHA!  None here...
'****'cept those funky looking ASCIIs... which are encrypted words!
IF RIGHT$(Xy$, 7) = "¥°°©«¶³" THEN Xy$ = "": OSel = Sel: Sel = 9: GOSUB CShow: Sel = OSel: PUT (240, 20), C%(0, 9), PSET: GOSUB CShow2: IF PLCNT = 0 THEN PLCNT = 1: SPl = Sel: PL1 = 9: LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel  _
AND 1) * 100, 78 + (Sel \ 2) * 23), 20, B: LINE (68 + (Sel AND 1) * 100 + 1, 59 + (Sel \ 2) * 23 + 1)-(153 + (Sel AND 1) * 100 - 1, 78 + (Sel \ 2) * 23 - 1), 25, BF: SPRINT "CHOOSE FOR", 68 + (Sel AND 1) * 100 + 4, 59 + (Sel \ 2) * 23 + 4, 31, 16, 4 _
, 2, 1: SPRINT "TOURNEMENT", 68 + (Sel AND 1) * 100 + 4, 66 + (Sel \ 2) * 23 + 4, 31, 16, 4, 2, 1: GET (0, 0)-(319, 199), a%(0): LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel AND 1) * 100, 78 + (Sel \ 2) * 23), 31, B: GOTO CChs ELSE _
 PL2 = 9: RANDOMIZE TIMER: Levl = INT(RND * 2) * 5: GOTO EndCChs
IF RIGHT$(Xy$, 4) = "·­°³" THEN Xy$ = "": OSel = Sel: Sel = 10: GOSUB CShow: Sel = OSel: PUT (240, 20), C%(0, 10), PSET: GOSUB CShow2: IF PLCNT = 0 THEN PLCNT = 1: SPl = Sel: PL1 = 10: LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel  _
AND 1) * 100, 78 + (Sel \ 2) * 23), 20, B: LINE (68 + (Sel AND 1) * 100 + 1, 59 + (Sel \ 2) * 23 + 1)-(153 + (Sel AND 1) * 100 - 1, 78 + (Sel \ 2) * 23 - 1), 25, BF: SPRINT "CHOOSE FOR", 68 + (Sel AND 1) * 100 + 4, 59 + (Sel \ 2) * 23 + 4, 31, 16, 4 _
, 2, 1: SPRINT "TOURNEMENT", 68 + (Sel AND 1) * 100 + 4, 66 + (Sel \ 2) * 23 + 4, 31, 16, 4, 2, 1: GET (0, 0)-(319, 199), a%(0): LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel AND 1) * 100, 78 + (Sel \ 2) * 23), 31, B: GOTO CChs ELSE _
 PL2 = 10: RANDOMIZE TIMER: Levl = INT(RND * 2) * 5: GOTO EndCChs
IF RIGHT$(Xy$, 5) = "·³°¥¶" THEN Xy$ = "": GET (0, 0)-(319, 199), a%(0): LINE (156 - 36, 100 - 10)-(156 + 36, 100 + 10), 32, BF: LINE (156 - 36, 100 - 10)-(156 + 36, 100 + 10), 76, B: SPRINT "LEVEL 1", -2, 100 - 3 - 4, 44, 16, 4, 2, 1: SPRINT  _
"UNLOCKED!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1: TDelay 1: PUT (0, 0), a%, PSET: PFlag = PFlag + 1 * ABS((PFlag AND 1) <> 1)
IF RIGHT$(Xy$, 5) = "°¹²¥¶" THEN Xy$ = "": GET (0, 0)-(319, 199), a%(0): LINE (156 - 36, 100 - 10)-(156 + 36, 100 + 10), 32, BF: LINE (156 - 36, 100 - 10)-(156 + 36, 100 + 10), 76, B: SPRINT "LEVEL 2", -2, 100 - 3 - 4, 44, 16, 4, 2, 1: SPRINT  _
"UNLOCKED!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1: TDelay 1: PUT (0, 0), a%, PSET: PFlag = PFlag + 2 * ABS((PFlag AND 2) <> 2)
IF RIGHT$(Xy$, 5) = "·¹´©¶" THEN Xy$ = "": GET (0, 0)-(319, 199), a%(0): LINE (156 - 36, 100 - 10)-(156 + 36, 100 + 10), 32, BF: LINE (156 - 36, 100 - 10)-(156 + 36, 100 + 10), 76, B: SPRINT "LEVEL 3", -2, 100 - 3 - 4, 44, 16, 4, 2, 1: SPRINT  _
"UNLOCKED!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1: TDelay 1: PUT (0, 0), a%, PSET: PFlag = PFlag + 4 * ABS((PFlag AND 4) <> 4)
IF RIGHT$(Xy$, 4) = "²³º¥" THEN Xy$ = "": GET (0, 0)-(319, 199), a%(0): LINE (156 - 36, 100 - 10)-(156 + 36, 100 + 10), 32, BF: LINE (156 - 36, 100 - 10)-(156 + 36, 100 + 10), 76, B: SPRINT "LEVEL 4", -2, 100 - 3 - 4, 44, 16, 4, 2, 1: SPRINT  _
"UNLOCKED!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1: TDelay 1: PUT (0, 0), a%, PSET: PFlag = PFlag + 8 * ABS((PFlag AND 8) <> 8)
'****Password checking.... DON'T try to find any out.  You'll fail!***********
IF LEN(Xy$) >= 7 THEN
PC$ = MID$(Xy$, 1, 1): PWC = 0: XXPL1 = PL1: XXPL2 = PL2
IF PC$ >= "¥" AND PC$ <= "©" THEN PC$ = MID$(Xy$, 3, 1): PWC = PWC + 1
IF PC$ >= "ª" AND PC$ <= "®" THEN PC$ = MID$(Xy$, 5, 1): PWC = PWC + 1
IF PC$ >= "´" AND PC$ <= "¸" THEN PC$ = MID$(Xy$, 6, 1): PWC = PWC + 1
IF PC$ >= "º" AND PC$ <= "¾" THEN PWC = PWC + 1
IF PWC = 4 AND (ASC(MID$(Xy$, 2, 1)) - 165) \ 2 <> 8 AND (ASC(MID$(Xy$, 2, 1)) - 165) \ 2 <= 10 AND (ASC(MID$(Xy$, 2, 1)) - 165) \ 2 >= 0 THEN PL1 = (ASC(MID$(Xy$, 2, 1)) - 165) \ 2: PWC = PWC + 1
IF PWC = 5 AND (ASC(MID$(Xy$, 4, 1)) - 165) \ 2 <> 8 AND (ASC(MID$(Xy$, 4, 1)) - 165) \ 2 <= 10 AND (ASC(MID$(Xy$, 4, 1)) - 165) \ 2 >= 0 THEN PL2 = (ASC(MID$(Xy$, 4, 1)) - 165) \ 2: PWC = PWC + 1
IF PWC = 6 AND (ASC(MID$(Xy$, 7, 1)) - 165) \ 2 >= 0 AND (ASC(MID$(Xy$, 7, 1)) - 165) \ 2 <= 9 THEN Levl = (ASC(MID$(Xy$, 7, 1)) - 165) \ 2: PWC = PWC + 1
IF PWC = 7 THEN TNM = 1: GOTO EndCChs ELSE PL1 = XXPL1: PL2 = XXPL2: PWC = 0
END IF
'*****************************************************************************
IF Ky$ = CHR$(13) THEN
IF (Sel <> PL1) AND (Sel <> SPl) THEN
GOSUB CShow
GOSUB CShow2
END IF
IF PLCNT = 0 THEN PLCNT = 1: PL1 = Sel: LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel AND 1) * 100, 78 + (Sel \ 2) * 23), 20, B: LINE (68 + (Sel AND 1) * 100 + 1, 59 + (Sel \ 2) * 23 + 1)-(153 + (Sel AND 1) * 100 - 1, 78 + (Sel \ 2) _
 * 23 - 1), 25, BF: SPRINT "CHOOSE FOR", 68 + (Sel AND 1) * 100 + 4, 59 + (Sel \ 2) * 23 + 4, 31, 16, 4, 2, 1: SPRINT "TOURNEMENT", 68 + (Sel AND 1) * 100 + 4, 66 + (Sel \ 2) * 23 + 4, 31, 16, 4, 2, 1: GET (0, 0)-(319, 199), a%(0): LINE (68 + (Sel  _
AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel AND 1) * 100, 78 + (Sel \ 2) * 23), 31, B: GOTO CChs ELSE PL2 = Sel: RANDOMIZE TIMER: Levl = INT(RND * 2) * 5: GOTO EndCChs
END IF
IF MSel = Sel THEN GOTO CChs
LINE (68 + (MSel AND 1) * 100, 59 + (MSel \ 2) * 23)-(153 + (MSel AND 1) * 100, 78 + (MSel \ 2) * 23), 20, B
LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel AND 1) * 100, 78 + (Sel \ 2) * 23), 31, B
GOTO CChs
EndCChs:
IF ((PL1 = PL2) OR (PL2 = SPl)) AND TNM = 0 THEN
TNM = 1: Levl = 0
IF PL2 = SPl THEN PL2 = PL1: PL1 = 0
IF PL1 = PL2 THEN PL1 = 0: IF PL2 = 0 THEN PL1 = 1
END IF
IF PWC = 7 THEN IF Levl = 4 THEN XL1 = PL1: PL1 = 11 ELSE IF Levl = 9 THEN PL1 = 12
RESTORE CStat: FOR sv = 0 TO PL1: READ NM0$, MHP(0), MMP(0): NEXT sv
RESTORE CStat: FOR sv = 0 TO PL2: READ NM1$, MHP(1), MMP(1): NEXT sv
FOR sv = 0 TO 1: HP(sv) = MHP(sv): MP(sv) = MMP(sv): NEXT sv
IF TNM = 1 THEN
CLS : PUT (160 - 30, 91), C%(0, PL1), PSET: PUT (172, 91), C%(0, PL2), PSET
IF Levl < 8 AND Levl <> 4 THEN SPRINT "NEXT UP:", 110, 30, 44, 55, 8, 8, 2
IF Levl = 8 THEN SPRINT "EVIL TWIN!", 95, 30, 44, 55, 8, 8, 2
IF Levl = 9 OR Levl = 4 THEN SPRINT "BOSS TIME!", 95, 30, 44, 55, 8, 8, 2
SPRINT "ROUND" + STR$(Levl + 1) + "!", -2, 79, 45, 55, 4, 2, 1
SPRINT "VS", 160 - 6, 98, 31, 55, 4, 2, 1
SPRINT NM0$, 144 - LEN(NM0$) * 6, 111, 31, 55, 4, 2, 1
SPRINT NM1$, 172, 111, 31, 55, 4, 2, 1
IF Levl = 4 THEN
SPRINT ">HEY...  IT'S BEEN AWHILE.  DO YOU", -2, 123, 79, 55, 4, 2, 1
SPRINT "THINK YOU CAN BEAT ME?  IF I COULD", -2, 131, 79, 55, 4, 2, 1
SPRINT "ASSASSINATE THE GREAT RIGOR MORTIS", -2, 139, 79, 55, 4, 2, 1
SPRINT "I THINK I CAN CERTAINLY KILL YOU!<", -2, 147, 79, 55, 4, 2, 1
END IF
IF Levl = 8 THEN
SPRINT "AN EVIL TWIN JUST SHOWED UP!", -2, 123, 79, 55, 4, 2, 1
SPRINT "THE TWIN CLAIMS ALL VICTORIES", -2, 131, 79, 55, 4, 2, 1
SPRINT "WON BY YOU... WERE MADE BY THE TWIN!", -2, 139, 79, 55, 4, 2, 1
SPRINT "HOWEVER, YOU'LL SET THINGS STRAIGHT...", -2, 147, 79, 55, 4, 2, 1
END IF
IF Levl = 9 AND PL1 <> 14 THEN
SPRINT ">WHAT'S UP?  COME TO CHALLENGE ME,", -2, 123, 79, 55, 4, 2, 1
SPRINT "EH?  DUBHE WAS A WIMP, BUT I AM NOT.", -2, 131, 79, 55, 4, 2, 1
SPRINT "IF YOU WANT TO KNOW THE TRUE MEANING", -2, 139, 79, 55, 4, 2, 1
SPRINT "OF PONG, BY ALL MEANS...  ENGARDE!<", -2, 147, 79, 55, 4, 2, 1
END IF
IF Levl = 9 AND PL1 = 14 THEN
SPRINT ">YOU ALREADY LOST TO ME!  WELL, I", -2, 123, 79, 55, 4, 2, 1
SPRINT "AM NOT WORRIED.  I BEAT YOU ONCE, SO", -2, 131, 79, 55, 4, 2, 1
SPRINT "I CAN BEAT YOU AGAIN.  THIS IS IT.", -2, 139, 79, 55, 4, 2, 1
SPRINT "IF YOU DON'T WIN THIS LAST ROUND...<", -2, 147, 79, 55, 4, 2, 1
END IF
XXPL1 = PL1
IF Levl = 4 OR Levl = 9 THEN PL1 = XL1
PW$ = ""
PW$ = CHR$(INT(RND * 5) + 65) + CHR$(INT(RND * 2) + 65 + (PL1 * 2)) + CHR$(INT(RND * 5) + 70)
PW$ = PW$ + CHR$(INT(RND * 2) + 65 + (PL2 * 2)) + CHR$(INT(RND * 5) + 80) + CHR$(INT(RND * 5) + 86)
PW$ = PW$ + CHR$(INT(RND * 2) + 65 + (Levl * 2))
IF PWC = 0 AND Levl > 0 AND TTry = 0 THEN SPRINT "YOUR PASSWORD IS " + PW$ + ".", -2, 157, 40, 112, 4, 2, 1
PL1 = XXPL1: PWC = 0

DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
END IF
SELECT CASE Levl
CASE 0
IF (PFlag AND 1) <> 1 THEN ILoad "L01.RLV": RESTORE Level0 ELSE ILoad "PAT1.RM2": RESTORE Level6
CASE 1
IF (PFlag AND 2) <> 2 THEN ILoad "L02.RLV": RESTORE Level1 ELSE ILoad "RTOP.RM2": RESTORE Level6
CASE 2
IF (PFlag AND 4) <> 4 THEN ILoad "L03.RLV": RESTORE Level2 ELSE ILoad "RTOP2.RM2": RESTORE Level6
CASE 3
IF (PFlag AND 8) <> 8 THEN ILoad "L04.RLV": RESTORE Level3 ELSE ILoad "RBOT2.RM2": RESTORE Level6
CASE 4
ILoad "LB1.RLV": RESTORE Level6
CASE 5
IF ((PFlag AND 1) <> 1 OR TNM = 1) OR ((PFlag AND 1) <> 1 AND TNM = 0) THEN ILoad "L05.RLV": RESTORE Level4 ELSE ILoad "PAT1.RM2": RESTORE Level6
CASE 6
IF ((PFlag AND 2) <> 2 OR TNM = 1) OR ((PFlag AND 2) <> 2 AND TNM = 0) THEN ILoad "L06.RLV": RESTORE Level5 ELSE ILoad "RTOP.RM2": RESTORE Level6
CASE 7
IF ((PFlag AND 4) <> 4 OR TNM = 1) OR ((PFlag AND 4) <> 4 AND TNM = 0) THEN ILoad "L07.RLV": RESTORE Level6 ELSE ILoad "RTOP2.RM2": RESTORE Level6
CASE 8
IF ((PFlag AND 8) <> 8 OR TNM = 1) OR ((PFlag AND 8) <> 8 AND TNM = 0) THEN ILoad "L08.RLV": RESTORE Level7 ELSE ILoad "RBOT2.RM2": RESTORE Level6
CASE 9
ILoad "LB2.RLV": RESTORE Level6
CASE ELSE
END SELECT


PUT (0, 0), a%, PSET: IF PFlag > 0 AND (Levl = 0 OR (Levl = 5 AND TNM = 0)) THEN LINE (0, 0)-(319, 7), 32, BF: GET (0, 0)-(319, 199), a%(0)
FOR svy = 0 TO 11: FOR svx = 0 TO 19: READ PP(svx, svy): NEXT svx, svy
FOR sv = 0 TO 10 STEP .5: GET (1 * 16, sv * 18 + 8)-(1 * 16 + 17, sv * 18 + 16), PD1%(0, sv * 2): NEXT sv
FOR sv = 0 TO 10 STEP .5: GET (18 * 16, sv * 18 + 8)-(18 * 16 + 17, sv * 18 + 16), PD2%(0, sv * 2): NEXT sv
BL = ABS(Levl = 7) * 2: OBF = 0
Y1 = 4: PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
Y2 = 4: PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
WHTB = 1
IF WHTB = 0 THEN BX = 1 * 16 + 18: BY = (Y1 + 1) * 16 + 16: BTP = BlTm
IF WHTB = 1 THEN BX = 18 * 16 - 9: BY = (Y2 + 1) * 16 + 16: BTP = BlTm
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
IF TNM = 1 THEN SPRINT "ROUND" + RTRIM$(STR$(Levl + 1)) + "!", -2, 1, 44, 56, 4, 2, 1
IF TNM = 0 THEN SPRINT "ROUND" + RTRIM$(STR$((Levl + 1) - ABS(Levl > 4) * 5)) + "!", -2, 1, 44, 56, 4, 2, 1
TDelay 2: LINE (0, 0)-(319, 7), 32, BF
Stat 3
WHTB = 1 - WHTB: BIP = 0: BlTm = .0001: BCNT = 0: SWeap(0) = 0: SWeap(1) = 0: FirW1 = 0: FirW2 = 0: GRV = 0: GRVC = 0
IF TNM = 1 AND (Levl = 4 OR Levl = 9) THEN Distort 0
BF = -2: OKFL2 = 0: OKFL = 0
MPad:
DO: LOOP UNTIL INKEY$ = ""
DO
FOR svv = 0 TO 1
IF SWeap(svv) <> 0 THEN GOSUB WCheck
NEXT svv
BWL = 0
'************
IF BTP >= BlTm THEN
CDC1 = CDC1 + ABS(CD1$ <> ""): IF CDC1 = 15 THEN CDC1 = 0: CD1$ = ""
CDC2 = CDC2 + ABS(CD2$ <> ""): IF CDC2 = 15 THEN CDC2 = 0: CD2$ = ""
IF BIP = 1 THEN
IF BX + CBX <= 3 THEN HP(0) = HP(0) - CINT(MHP(0) / 4): BWL = 1: Stat 4 ELSE IF BX + CBX >= 310 THEN HP(1) = HP(1) - CINT(MHP(1) / 4): BWL = 1: Stat 4
IF BX + CBX <= 3 OR BX + CBX >= 310 THEN BIP = 0: BL = ABS(Levl = 7) * 2: OBF = ABS(TNM <> 1 OR OBF <> 1) * OBF: PUT (OBX, OBY), B2%, PSET: CBX = 0: CBY = 0: OBX = BX: OBY = BY: IF WHTB = 1 THEN BX = 1 * 16 + 18: BY = (Y1 + 1) * 16 + 16: BTP = BlTm  _
ELSE BX = 18 * 16 - 9: BY = (Y2 + 1) * 16 + 16: BTP = BlTm
IF BWL = 1 AND (HP(0) = 0 OR HP(1) = 0) THEN GOTO CDied
IF BY + CBY <= 8 OR BY + CBY >= 190 THEN CBY = -SGN(CBY) * ((RND * 5) + 5): SOUND 400 + RND * 100, .1: GOTO EChck
IF OKFL2 = 0 AND Levl = 4 AND TNM = 1 AND (BX + CBX) <= (4 * 16) AND BF > 0 AND OKFL = 1 THEN CBX = ABS(CBX): OKFL = 0: BF = BF - 1: LINE (3 * 16, 2 * 16 + 8)-(3 * 16 + 15, 9 * 16 + 8 + 15), 31, BF: TDelay .1: FOR sv = 2 TO 9: PUT (3 * 16, sv * 16 + _
 8), D%(0, 1), PSET: NEXT sv: PLAY "mbl64n1n5"
IF OKFL2 = 0 AND Levl = 4 AND TNM = 1 AND (BX + CBX) <= (3 * 16 - 8) THEN OKFL2 = ABS(HP(0) = 1): SuperNova 0: BF = -1: PUT (OBX, OBY), B2%, PSET: BIP = 0: CBX = 0: CBY = 0: OBX = BX: OBY = BY: BX = 18 * 16 - 9: BY = (Y2 + 1) * 16 + 16: BTP = BlTm: _
    FOR sv = 3 TO 9: PP(3, sv - 1) = 0: NEXT sv
IF Levl = 9 AND (BX + CBX) >= 120 AND (BY + CBY) >= 48 AND (BX + CBX) <= 162 AND (BY + CBY) <= 61 THEN GOSUB Insect
IF PP(INT(BX) \ 16, INT(BY + CBY - 8) \ 16) <> 0 OR PP(INT(BX) \ 16, INT(BY + CBY) \ 16) <> 0 OR (BX <= 33 AND (BY + CBY + 8) >= Y1 * 16 + 8 AND (BY + CBY) <= Y1 * 16 + 61) OR (BX >= 280 AND (BY + CBY + 8) >= Y2 * 16 + 8 AND (BY + CBY) <= Y2 * 16 +  _
61) THEN CBX = SGN(CBX) * ((RND * 7) + 3): CBY = -SGN(CBY) * ((RND * 7) + 3): SOUND 400 + RND * 100, .1: GOTO EChck
IF PP(INT(BX + CBX) \ 16, INT(BY - 8) \ 16) <> 0 OR PP(INT(BX + CBX) \ 16, INT(BY) \ 16) <> 0 OR (BX + CBX <= 33 AND (BY + 8) >= Y1 * 16 + 8 AND BY <= Y1 * 16 + 61) OR (BX + CBX >= 280 AND (BY + 8) >= Y2 * 16 + 8 AND BY <= Y2 * 16 + 61) THEN CBX = - _
SGN(CBX) * ((RND * 7) + 3): CBY = SGN(CBY) * ((RND * 7) + 3): SOUND 400 + RND * 100, .1: GOTO EChck
IF PP(INT(BX + CBX) \ 16, INT(BY + CBY - 8) \ 16) <> 0 OR PP(INT(BX + CBX) \ 16, INT(BY + CBY) \ 16) <> 0 OR (BX + CBX <= 33 AND (BY + CBY + 8) >= Y1 * 16 + 8 AND (BY + CBY) <= Y1 * 16 + 61) OR (BX + CBX >= 280 AND (BY + CBY + 8) >= Y2 * 16 + 8 AND  _
(BY + CBY) <= Y2 * 16 + 61) THEN CBY = -SGN(CBY) * ((RND * 7) + 3): CBX = -SGN(CBX) * ((RND * 7) + 3): SOUND 400 + RND * 100, .1: GOTO EChck
IF (BL = 1 OR BL = 2) AND (BX < 50 OR BX > 250) AND BCNT = 1 THEN sv = ABS(BX > 250): HP(sv) = HP(sv) - SGN(BL * 2 - 3) * CINT(MHP(sv) / 16): HP(sv) = ABS(HP(sv) > MHP(sv)) * MHP(sv) + ABS(HP(sv) <= MHP(sv)) * HP(sv): Stat sv: BCNT = -1
IF Levl = 4 AND TNM = 1 AND BX > 160 THEN OKFL = 1
BCNT = ABS(BX > 50 AND BX < 250) + ABS(BX < 50 OR BX > 250) * BCNT
END IF

EChck:
BTP = 0: BX = BX + CBX: BY = BY + CBY: BStTm = TIMER
'IF PP(INT(BX) \ 16, INT(BY - 8) \ 16) <> 0 OR PP(INT(BX) \ 16, INT(BY) \ 16) <> 0 THEN BX = OBX: BY = OBY: CBX = -CBX: CBY = -CBY
IF PP(INT(BX) \ 16, INT(BY - 8) \ 16) <> 0 OR PP(INT(BX) \ 16, INT(BY) \ 16) <> 0 OR (BX <= 33 AND (BY + 8) >= Y1 * 16 + 8 AND (BY) <= Y1 * 16 + 61) OR (BX >= 280 AND (BY + 8) >= Y2 * 16 + 8 AND (BY) <= Y2 * 16 + 61) THEN CBY = -SGN(CBY) * ((RND * 7 _
) + 3): CBX = -SGN(CBX) * ((RND * 7) + 3): SOUND 400 + RND * 100, .1: BX = OBX: BY = OBY
IF BX <> OBX OR BY <> OBY THEN PUT (OBX, OBY), B2%, PSET: BX = ABS(BX >= 0 AND BX < 310) * BX + ABS(BX >= 310) * 310: BY = ABS(BY >= 0 AND BY < 190) * BY + ABS(BY >= 190) * 190: OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY),  _
B%(0, BL), PSET
IF OY1 = Y1 AND BX <= 33 THEN CST = CST + 1
ELSE BTP = TIMER - BStTm
END IF

Xy$ = ""
IF BTP2 >= (((10 - Levl) / 10) * .05 + .05) AND TNM = 1 THEN
BStTm2 = TIMER: BTP2 = 0
IF BIP = 1 AND (CST >= 15 OR OCST > 0) THEN Xy$ = CHR$(83 + 4 * ABS(Y1 >= 4.5)): OCST = ABS(OCST > 0) * (OCST - 1) + ABS(OCST = 0) * 2: CST = 0: CBX = ABS(BX >= 33) * CBX + ABS(BX < 33) * (-ABS(CBX)): EXIT DO
IF BIP = 1 AND BX < 100 AND (BY - 8) < (Y1 + .65) * 16 THEN Xy$ = "W": EXIT DO
IF BIP = 1 AND BX < 100 AND (BY - 8) > (Y1 + 2.85) * 16 THEN Xy$ = "S": EXIT DO
IF (BIP = 1 AND BX > 100) OR BIP = 0 THEN IF INT(RND * 100) + 1 <= 30 THEN Xy$ = CHR$(83 + 4 * ABS(INT(RND * 100) <= 40 + ABS((BY - 8) \ 16 < Y1 + 1.5) * 10)): EXIT DO
IF BIP = 0 AND WHTB = 1 AND CRND = 0 THEN CRND = 9 ELSE IF BIP = 0 AND WHTB = 1 AND CRND > 0 THEN CRND = CRND - 2: Xy$ = CHR$(83 + INT(RND * 2) * 4): EXIT DO ELSE IF BIP = 0 AND WHTB = 1 AND CRND < 0 THEN CRND = 0: Xy$ = "D": EXIT DO
IF BIP = 1 AND INT(RND * 20) = 1 AND ((Y2 > 3 AND Y2 < 5) OR (HP(1) > MHP(1) * .75)) THEN Xy$ = CHR$(0) + CHR$(59 + INT(RND * 2)) + LTRIM$(RTRIM$(STR$(INT(RND(0) * 2) + 1))): EXIT DO

IF Levl = 4 AND OKFL2 = 0 THEN
IF BF < -1 THEN BF = BF + 1
IF BF = -1 THEN BF = 4: FOR sv = 3 TO 9: SOUND 40, .1: PP(3, sv - 1) = 1: PUT (3 * 16, (sv - 1) * 16 + 8), D%(0, 1), PSET: PUT (3 * 16, sv * 16 + 8), D%(0, 0), PSET: TDelay .1: NEXT sv: PUT (3 * 16, 9 * 16 + 8), D%(0, 1), PSET
IF BF = 0 THEN FOR sv = 3 TO 9: SOUND 40, .1: PP(3, sv - 1) = 0: PUT (3 * 16, (sv - 1) * 16 + 8), D%(0, 2), PSET: PUT (3 * 16, sv * 16 + 8), D%(0, 0), PSET: TDelay .15: NEXT sv: PUT (3 * 16, 9 * 16 + 8), D%(0, 2), PSET: BF = -30
END IF

ELSE BTP2 = (TIMER - BStTm2) * TNM
END IF

'************
Ky$ = INKEY$
LOOP WHILE Ky$ = ""

cy1 = 0: cy2 = 0

IF TNM = 0 THEN Xy$ = Ky$
IF INSTR("." + CHR$(0) + "H" + "." + CHR$(0) + "P" + "." + CHR$(0) + "K" + "." + CHR$(0) + "M" + ".", "." + Ky$ + ".") > 0 THEN CD1$ = CD1$ + RIGHT$(Ky$, 1)
IF INSTR(".W.S.A.D.", "." + UCASE$(Xy$) + ".") > 0 THEN CD2$ = CD2$ + UCASE$(Xy$)
IF RIGHT$(CD1$, 3) = "MPK" THEN CDC1 = 0: CD1$ = "": Ky$ = CHR$(0) + "C1" ELSE IF RIGHT$(CD2$, 3) = "ASD" THEN CDC2 = 0: CD2$ = "": Xy$ = CHR$(0) + ";1" ELSE IF RIGHT$(CD1$, 4) = "MMMK" THEN CDC1 = 0: CD1$ = "": Ky$ = CHR$(0) + "D2" ELSE IF RIGHT$( _
CD2$, 4) = "AAAD" THEN CDC2 = 0: CD2$ = "": Xy$ = CHR$(0) + "<2" ELSE IF RIGHT$(CD1$, 4) = "HKPM" THEN CDC1 = 0: CD1$ = "": Ky$ = CHR$(0) + "EH1" ELSE IF RIGHT$(CD2$, 4) = "WDSA" THEN CDC2 = 0: CD2$ = "": Xy$ = CHR$(0) + "EH2"

IF UCASE$(Xy$) = "W" THEN cy1 = -.5 + 1 * ABS(OBF = 1)
IF UCASE$(Xy$) = "S" THEN cy1 = .5 - 1 * ABS(OBF = 1)
IF UCASE$(Xy$) = "D" AND BIP = 0 AND WHTB = 1 THEN WHTB = 0: BIP = 1: CBX = (RND * 5) + 5: CBY = INT(RND * 2) * 2 - 1
IF UCASE$(Xy$) = "D" AND BIP = 1 AND BL = 3 AND PL1 = 4 THEN CBX = ABS(CBX): MP(0) = MP(0) - 2: MP(0) = ABS(MP(0) > 0) * MP(0): BL = ABS(MP(0) > 0) * BL: Stat 0 ELSE IF UCASE$(Xy$) = "A" AND BIP = 1 AND BL = 3 AND PL1 = 4 THEN CBX = -ABS(CBX): MP(0) _
 = MP(0) - 2: MP(0) = ABS(MP(0) > 0) * MP(0): Stat 0: BL = ABS(MP(0) > 0) * BL
IF UCASE$(Xy$) = "A" AND BIP = 0 AND WHTB = 1 THEN WHTB = 0: BIP = 1: CBX = 15: CBY = (RND * 2.3436) - 1.1718

IF Xy$ = CHR$(0) + ";1" AND BIP = 1 AND SWeap(0) = 0 AND GRVC = 0 THEN FirW1 = 1: GOSUB WCheck
IF Xy$ = CHR$(0) + "<2" AND BIP = 1 AND SWeap(0) = 0 AND GRVC = 0 THEN FirW1 = 2: GOSUB WCheck
IF Xy$ = CHR$(0) + "EH2" AND BIP = 1 AND SWeap(0) = 0 AND GRVC = 0 THEN IF GRV = 0 THEN EyeHeal 0 ELSE EyeHeal 1: GRV = GRV - 1

IF Ky$ = CHR$(0) + "H" THEN cy2 = -.5 + 1 * ABS(OBF = 2)
IF Ky$ = CHR$(0) + "P" THEN cy2 = .5 - 1 * ABS(OBF = 2)
IF Ky$ = CHR$(0) + "K" AND BIP = 0 AND WHTB = 0 THEN WHTB = 1 * ABS(Levl <> 4 AND Levl < 9): BIP = 1: CBX = -(RND * 5) - 5: CBY = INT(RND * 2) * 2 - 1
IF Ky$ = CHR$(0) + "M" AND BIP = 1 AND BL = 3 AND PL2 = 4 THEN CBX = ABS(CBX): MP(1) = MP(1) - 2: MP(1) = ABS(MP(1) > 0) * MP(1): BL = ABS(MP(1) > 0) * BL: Stat 1 ELSE IF Ky$ = CHR$(0) + "K" AND BIP = 1 AND BL = 3 AND PL2 = 4 THEN CBX = -ABS(CBX): _
                                                                                                    MP(1) = MP(1) - 2: MP(1) = ABS(MP(1) > 0) * MP(1): Stat 1: BL = ABS(MP(1) > 0) * BL
IF Ky$ = CHR$(0) + "M" AND BIP = 0 AND WHTB = 0 THEN WHTB = 1 * ABS(Levl <> 4 AND Levl < 9): BIP = 1: CBX = -15: CBY = (RND * 2.3436) - 1.1718

IF Ky$ = CHR$(0) + "C1" AND BIP = 1 AND SWeap(1) = 0 AND GRVC = 0 THEN FirW2 = 1: GOSUB WCheck
IF Ky$ = CHR$(0) + "D2" AND BIP = 1 AND SWeap(1) = 0 AND GRVC = 0 THEN FirW2 = 2: GOSUB WCheck
IF Ky$ = CHR$(0) + "EH1" AND BIP = 1 AND SWeap(1) = 0 AND GRVC = 0 THEN IF GRV = 0 THEN EyeHeal 1 ELSE EyeHeal 0: GRV = GRV - 1

IF Y1 + cy1 < 1 THEN cy1 = 0 ELSE IF Y2 + cy2 < 1 THEN cy2 = 0 ELSE IF Y1 + cy1 > 7.5 THEN cy1 = 0 ELSE IF Y2 + cy2 > 7.5 THEN cy2 = 0
IF PP(18, INT(Y2 + cy2) + 3) = 1 OR PP(18, INT(Y2 + cy2)) = 1 THEN cy2 = 0 ELSE IF PP(1, INT(Y1 + cy1) + 3) = 1 OR PP(1, INT(Y1 + cy1)) = 1 THEN cy1 = 0
OY1 = Y1
Y1 = Y1 + cy1: Y2 = Y2 + cy2
IF cy1 > 0 THEN PUT (1 * 16, (INT(Y1 - .5) - .5 * ABS(Y1 >= 5)) * 18 + 8), PD1%(0, INT(Y1 - .5) * 2 - ABS(Y1 >= 5)), PSET: PUT (1 * 16, (INT(Y1) - .5 - .5 * ABS(Y1 >= 5)) * 18 + 8), PD1%(0, INT(Y1) * 2 - 1 - 1 * ABS(Y1 >= 5)), PSET
IF cy1 < 0 THEN PUT (1 * 16, (INT(Y1 + 2 + .5) + .5 * ABS(Y1 <= 5)) * 18 + 8), PD1%(0, INT(Y1 + 2 + .5) * 2 + ABS(Y1 <= 5)), PSET: PUT (1 * 16, (INT(Y1) + 2 + .5 + .5 * ABS(Y1 <= 5)) * 18 + 8), PD1%(0, INT(Y1 + 2) * 2 + 1 + 1 * ABS(Y1 <= 5)), PSET
IF cy1 <> 0 THEN PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET: IF BIP = 0 AND WHTB = 1 THEN BX = 1 * 16 + 18: BY = (Y1 + 1) * 16 + 16: BTP = BlTm
IF cy2 > 0 THEN PUT (18 * 16, (INT(Y2 - .5) - .5 * ABS(Y2 >= 5)) * 18 + 8), PD2%(0, INT(Y2 - .5) * 2 - ABS(Y2 >= 5)), PSET: PUT (18 * 16, (INT(Y2) - .5 - .5 * ABS(Y2 >= 5)) * 18 + 8), PD2%(0, INT(Y2) * 2 - 1 - 1 * ABS(Y2 >= 5)), PSET
IF cy2 < 0 THEN PUT (18 * 16, (INT(Y2 + 2 + .5) + .5 * ABS(Y2 <= 5)) * 18 + 8), PD2%(0, INT(Y2 + 2 + .5) * 2 + ABS(Y2 <= 5)), PSET: PUT (18 * 16, (INT(Y2) + 2 + .5 + .5 * ABS(Y2 <= 5)) * 18 + 8), PD2%(0, INT(Y2 + 2) * 2 + 1 + 1 * ABS(Y2 <= 5)), PSET
IF cy2 <> 0 THEN PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET: IF BIP = 0 AND WHTB = 0 THEN BX = 18 * 16 - 9: BY = (Y2 + 1) * 16 + 16: BTP = BlTm
GOTO MPad
WCheck:
FOR sv = 1 TO 2
IF sv = 1 THEN SD = 0: PLN = PL1: FirW = FirW1 ELSE PLN = PL2: FirW = FirW2: SD = 1
IF FirW > 0 AND GRV > 0 THEN GRV = GRV - 1: GRVC = 1: SD = (1 - SD): IF (FirW = 1 AND PLN = 1) OR (FirW = 2 AND PLN = 5) THEN GRV = GRV + 1
SELECT CASE PLN
CASE 0
IF FirW = 1 THEN Nuke SD
IF FirW = 2 THEN Shrapnel SD
CASE 1
IF FirW = 1 THEN SStrike SD
IF FirW = 2 THEN CExplode SD
CASE 2
IF FirW = 1 THEN LShock SD
IF FirW = 2 THEN Obfuscate SD
CASE 3
IF FirW = 1 THEN HarmBall SD
IF FirW = 2 THEN Dispel SD
CASE 4
IF FirW = 1 THEN HealBall SD
IF FirW = 2 THEN CtrlBall SD
CASE 5
IF FirW = 1 THEN FireBall SD
IF FirW = 2 THEN EStream SD
CASE 6
IF FirW = 1 THEN HSword SD
IF FirW = 2 THEN Lance SD
CASE 7
IF FirW = 1 THEN Focus SD
IF FirW = 2 THEN Distort SD
CASE 9
IF FirW = 1 THEN Laser SD
IF FirW = 2 THEN Gravis SD
CASE ELSE
END SELECT
IF SWeap(0) = 0 AND SWeap(1) = 0 THEN GRVC = 0
NEXT sv
RETURN
DErr:
SCREEN 12: CLS
FOR sv = -63 TO 0 STEP 3: svv = (63 - ABS(sv)): PALETTE 0, svv: TDelay .01: NEXT sv
IF ERR = 53 THEN
LOCATE 5, 5: PRINT "Apparently, I cannot find the game files.  Let me check something..."
FOR sv = 0 TO 63 STEP 3: svv = (63 - ABS(sv)): PALETTE 0, svv: TDelay .01: NEXT sv
SHELL "cd\": SHELL "dir /s/b LOCATOR.RM2 > C:\RM2.RM2"
OPEN "C:\RM2.RM2" FOR INPUT AS #1
IF EOF(1) = 0 THEN LINE INPUT #1, XX$: XX$ = LEFT$(XX$, INSTR(XX$, "LOCATOR") - 2): XX = 1 ELSE XX = 0
CLOSE #1
SHELL "del C:\RM2.RM2"
IF XX = 1 THEN
LOCATE 7, 5: PRINT "Ahhh... there they are!  In the directory of "; XX$; "!"
LOCATE , 5: PRINT "To avoid this next time, change the directory to "; XX$: LOCATE , 5: PRINT "and run QBASIC from there."
SHELL "cd " + XX$: DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
ELSE
LOCATE 7, 5: PRINT "Hmmm... do you even still HAVE the game files for RMortis2?  Guess not."
LOCATE , 5: PRINT "Either they're gone, or LOCATOR.RM2 is renamed or deleted.  Tell you what,"
LOCATE , 5: PRINT "though, if you KNOW for sure that you have all the game files, find them"
LOCATE , 5: PRINT "and make another file called LOCATOR.RM2 (doesn't matter whats in it) and"
LOCATE , 5: PRINT "stick it in the same directory as the other files.  Then rerun RMortis2.": PRINT
LOCATE , 5: PRINT "...or if ya don't have 'em, just download them again!"
END
END IF
ELSE
LOCATE 5, 5: PRINT "Well, I dunno what happened.  You've got some kinda error here."
FOR sv = 0 TO 63 STEP 3: svv = (63 - ABS(sv)): PALETTE 0, svv: TDelay .01: NEXT sv
LOCATE 7, 5: PRINT "If I were you, I'd go and write some email to "; : COLOR 10: PRINT "Aedes"; : COLOR 15: PRINT "."
LOCATE , 5: PRINT "His internet address is "; : COLOR 12: PRINT "AEDES@AOL.COM"; : COLOR 15: PRINT "!"
LOCATE , 5: PRINT "And be sure to tell him when it stopped and the error code (which is"; : COLOR 9: PRINT RTRIM$(STR$(ERR)); : COLOR 15: PRINT ")."
END
END IF
RESUME NEXT
CDied:
IF TNM = 1 AND Levl = 4 AND HP(0) = 0 THEN GOTO BossAEnd
IF TNM = 1 AND Levl = 9 AND HP(0) = 0 THEN GOTO BossBEnd
XX = a%(0): FOR sv = 1 TO XX - 11 STEP 80: a%(0) = XX - sv: PUT (sv \ 16, 0), a%(0), PSET: NEXT sv
PLAY "mbl64n6n5n7n4n8n3n9n2n10n1": PALETTE 1, 4144959: FOR sv = 0 TO 100 STEP 5: LINE (0, 100 - sv)-(319, 100 - (sv - 10)), 1, BF: LINE (0, 100 + sv)-(319, 100 + (sv - 10)), 1, BF: TDelay .01: NEXT sv
FOR sv = 63 TO 0 STEP -3: PALETTE 1, sv + sv * 256 + sv * 65536: TDelay .01: NEXT sv
BossPickup:
RESTORE WinLine: FOR sv = 0 TO INT(RND * 10): READ WN$: NEXT sv
IF SEFlag = 0 THEN CLS : IF HP(0) = 0 THEN PUT (151, 91), C%(0, PL2), PSET: SPRINT NM1$ + WN$, -2, 113, 44, 55, 4, 2, 1 ELSE PUT (151, 91), C%(0, PL1), PSET: SPRINT NM0$ + WN$, -2, 113, 44, 55, 4, 2, 1
IF SEFlag > 0 THEN PUT (151, 91), C%(0, PL2), PSET: SPRINT NM1$ + WN$, -2, 113, 44, 55, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1): Levl = Levl + 1
IF SEFlag = 0 THEN
IF TNM = 0 THEN IF HP(0) = 0 THEN WIN2 = WIN2 + 1 ELSE WIN1 = WIN1 + 1
IF TNM = 0 AND (Levl = 4 OR Levl = 9) THEN
CLS
IF WIN1 > WIN2 THEN PLX = PL1: NMX$ = NM0$: WINX = WIN1 ELSE PLX = PL2: NMX$ = NM1$: WINX = WIN2
IF WIN1 <> WIN2 THEN PUT (151, 91), C%(0, PLX), PSET: SPRINT NMX$ + " IS AN AWESOME PLAYER, WITH" + STR$(WINX) + " WINS!", -2, 113, 44, 55, 4, 2, 1
IF WIN1 = WIN2 THEN PUT (160 - 30, 91), C%(0, PL1), PSET: PUT (172, 91), C%(0, PL2), PSET: SPRINT "NEITHER PLAYER WINS.  BOTH WON" + STR$(WINX) + ".  LAME.", -2, 113, 44, 55, 4, 2, 1
a$ = INPUT$(1)
GOTO StartPong
END IF
IF TNM = 1 AND HP(1) = 0 AND TTry = 1 THEN
CLS
LINE (48, 35)-(271, 50), 117, BF
SPRINT "WHOA...  YOU LOST!  YOU SUCK!", -2, 40, 16, 44, 4, 2, 1
PUT (151, 91), C%(0, 11 + ABS(Levl > 5) + ABS(PL1 = 14) * 2), PSET
SPRINT ">HAR, HAR!  THAT REALLY IS", -2, 113, 79, 55, 4, 2, 1
SPRINT "SORRY PONG PLAYING.  I GUESS", -2, 121, 79, 55, 4, 2, 1
SPRINT "YOU WON'T BE GETTING THE ESTATE", -2, 129, 79, 55, 4, 2, 1
SPRINT "OR AVENGING RIGOR MORTIS' DEATH!<", -2, 137, 79, 55, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1): CLS : LOCATE 5, 5: PRINT "GAME OVER.  PLAY AGAIN!": SYSTEM
END IF
IF TNM = 1 AND HP(1) = 0 AND TTry = 0 THEN
CLS
LINE (48, 35)-(271, 50), 117, BF
SPRINT "ONE MORE TRY!  WIN THIS TIME!", -2, 40, 16, 44, 4, 2, 1
PUT (151, 91), C%(0, 11 + ABS(Levl > 5) + ABS(PL1 = 14) * 2), PSET
SELECT CASE INT(RND * 5)
CASE 0
SPRINT ">IF YA CAN'T EVEN BEAT ONE OF", -2, 113, 79, 55, 4, 2, 1
SPRINT "YOUR OWN, WHAT MAKES YA THINK", -2, 121, 79, 55, 4, 2, 1
SPRINT "YOU CAN BEAT ME?<", -2, 129, 79, 55, 4, 2, 1
CASE 1
SPRINT ">GEEZ!  YOU'RE WIMPIER THAN", -2, 113, 79, 55, 4, 2, 1
SPRINT "THE OL' RIGOR MORTIS!  HE WAS", -2, 121, 79, 55, 4, 2, 1
SPRINT "SO EASY TO ASSASSINATE...<", -2, 129, 79, 55, 4, 2, 1
CASE 2
SPRINT ">YA CALL THAT PONG?!  I'VE SEEN", -2, 113, 79, 55, 4, 2, 1
SPRINT "DEAD MEN PLAY BETTER PONG THAN THAT!<", -2, 121, 79, 55, 4, 2, 1
CASE 3
SPRINT ">GIVE UP YET?<", -2, 113, 79, 55, 4, 2, 1
CASE 4
SPRINT ">I HAVE A FEELING I WILL NEVER", -2, 113, 79, 55, 4, 2, 1
SPRINT "PLAY AGAINST YOU... AT THE RATE", -2, 121, 79, 55, 4, 2, 1
SPRINT "YOU'RE GOING.<", -2, 129, 79, 55, 4, 2, 1
CASE ELSE
END SELECT
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1): Levl = Levl - 1: TTry = TTry + 1: GOTO EndCChs
END IF
END IF
SEFlag = 0
IF TNM = 1 THEN
IF Levl = 5 THEN PL1 = XL1
TTry = 0
IF Levl <> 4 AND Levl < 8 THEN PL1 = PL1 + 1: IF PL1 = PL2 THEN PL1 = PL1 + 1
IF PL1 > 7 THEN PL1 = 0
IF Levl = 8 THEN PL1 = PL2
IF Levl = 4 THEN XL1 = PL1: PL1 = 11
IF Levl = 9 THEN XL1 = PL2: PL1 = 12
END IF

GOTO EndCChs
END

DATA &H48,&H9,&H1048,&H1010,&H1010,&H1010,&H1048,&H2B10,&H2B2B,&H2B2B,&H1010,&H2B10,&H2B2B,&H2C2B,&H2B2B,&H1010,&H2B2C,&H2B2B,&H2B2B,&H102B,&H2C10,&H2B2B,&H2C2B,&H2B2C,&H1010,&H2B2C,&H2B2B,&H2C2C,&H102B,&H2C10,&H2B2C,&H2B2B,&H2B2B,&H1010,&H2C10,&H2C2C,&H2B2C,&H1010,&H1048,&H1010,&H1010,&H1010,&H48
DATA &H48,&H9,&H1048,&H1010,&H1010,&H1010,&H1048,&H3710,&H3737,&H3737,&H1010,&H3710,&H3737,&H3837,&H3737,&H1010,&H3738,&H3737,&H3737,&H1037,&H3810,&H3737,&H3837,&H3738,&H1010,&H3738,&H3737,&H3838,&H1037,&H3810,&H3738,&H3737,&H3737,&H1010,&H3810,&H3838,&H3738,&H1010,&H1048,&H1010,&H1010,&H1010,&H48
DATA &H48,&H9,&H1048,&H1010,&H1010,&H1010,&H1048,&H2810,&H2828,&H2828,&H1010,&H2810,&H2828,&H2A28,&H2828,&H1010,&H282A,&H2828,&H2828,&H1028,&H2A10,&H2828,&H2A28,&H282A,&H1010,&H282A,&H2828,&H2A2A,&H1028,&H2A10,&H282A,&H2828,&H2828,&H1010,&H2A10,&H2A2A,&H282A,&H1010,&H1048,&H1010,&H1010,&H1010,&H48
DATA &H48,&H9,&H1048,&H1010,&H1010,&H1010,&H1048,&H1D10,&H1D1D,&H1D1D,&H1010,&H1D10,&H1D1D,&H1F1D,&H1D1D,&H1010,&H1D1F,&H1D1D,&H1D1D,&H101D,&H1F10,&H1D1D,&H1F1D,&H1D1F,&H1010,&H1D1F,&H1D1D,&H1F1F,&H101D,&H1F10,&H1D1F,&H1D1D,&H1D1D,&H1010,&H1F10,&H1F1F,&H1D1F,&H1010,&H1048,&H1010,&H1010,&H1010,&H48

I2ICO:
DATA &H90,&H12,&H1C19,&H1C1C,&H1C1C,&H3919,&H3939,&H1C39,&H1C1C,&H1C1C,&H1C19,&H1C1C,&H1C1C,&H1C1C,&H3839,&H3939,&H3939,&H1C1C,&H1C1C,&H1C1C,&H2C1C,&H2C2C,&H3919,&H3839,&H3939,&H3938,&H1C39,&H2C2C,&H1C2C,&H2C2C,&H2C2A,&H392C,&H3938,&H3938,&H3838,&H2C39,&H2A2C,&H2C2C,&H2A2C,&H2A2A,&H382C,&H3838,&H3838,&H3838,&H2C38,&H2A2A,&H2C2A,&H2A2C,&H2A2A,&H2C2C,&H3838,&H3838,&H3838,&H2C2C,&H2A2A,&H2C2A,&H2A2C,&H2A2A,&H2C2A,&H382C,&H3841,&H2C41,&H2A2C,&H2A2A,&H2C2A,&H2C2C,&H2A2A,&H2C2A,&H412C,&H4141,&H2C41,&H2A2C,&H2A2A,&H2C2C,&H2C1C,&H2C2C,&H2A2A,&H2C2C,&H4141,&H2C2C,&H2A2A,&H2C2C,&H1C2C,&H1C1C,&H2C2C,&H2C2C,&H2C2C,&H1C1D,&H2C2C,&H2C2C,&H2C2C,&H1C1C,&H2C1C,&H2A2C,&H2C2C,&H2C2C,&H1C1D,&H2C2C,&H2C2C,&H2C2A,&H192C,&H2C1C,&H2A2A,&H2C2A,&H1E2C,&H1C1D,&H2C1D,&H2A2C,&H2A2A,&H1C2C,&H2C2C,&H2A2A,&H2C2A,&H1E2C,&H1C1D,&H2C1D,&H2A2C,&H2A2A,&H2C2C,&H2A2C,&H2A2A,&H2A2A,&H2C2C,&H1C1D,&H2C2C,&H2A2A,&H2A2A,&H2C2A,&H2C2C,&H2A2A,&H2A2A,&H2C2C,&H1C1D,&H2C2C,&H2A2A,&H2A2A,&H2C2C,&H2C1F,&H2A2C,&H2C2A,&H1E2C,&H1C1D,&H2C1D,&H2A2C,&H2C2A,&H192C,&H1C19,&H2C2C,&H2C2C,&H1E19,&H1C1D,&H1C1D,&H2C2C,&H2C2C,&H1C19,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1D,&H1C1C,&H1C1C,&H1C1C,&H1C1C
DATA &H90,&H12,&H1C19,&H1C1C,&H1C1C,&H3919,&H3939,&H1C39,&H1C1C,&H1C1C,&H1C19,&H1C1C,&H1C1C,&H1C1C,&H3839,&H3939,&H3939,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H392C,&H3839,&H3939,&H3938,&H2C39,&H1C1C,&H1C1C,&H1C1C,&H2C1C,&H2C2C,&H3938,&H3938,&H3838,&H2C2C,&H1C2C,&H1C1C,&H1C1C,&H2C2C,&H2C2A,&H3838,&H3838,&H3838,&H2A2C,&H2C2C,&H1C1C,&H1F1C,&H2A2C,&H2C2A,&H3838,&H3838,&H3838,&H2A2C,&H2C2A,&H1F1C,&H191C,&H2A2C,&H2C2A,&H382C,&H3841,&H2C41,&H2A2C,&H2C2A,&H191C,&H1C1C,&H2C2C,&H2A2A,&H412C,&H4141,&H2C41,&H2A2A,&H2C2C,&H1C1C,&H1C1C,&H2C1C,&H2C2C,&H2C2C,&H4141,&H2C2C,&H2C2C,&H1C2C,&H1C1C,&H1C1C,&H1C1C,&H2C2C,&H2C2C,&H1C1D,&H2C2C,&H2C2C,&H1C1C,&H1C1C,&H191C,&H1C1C,&H2A2C,&H2C2C,&H1C1D,&H2C2C,&H2C2A,&H1C1C,&H191C,&H1C1C,&H2C1C,&H2A2A,&H1E2C,&H1C1D,&H2C1D,&H2A2A,&H1C2C,&H1C1C,&H1C1C,&H2A2C,&H2A2A,&H1E2C,&H1C1D,&H2C1D,&H2A2A,&H2C2A,&H1C1C,&H1C1C,&H2A2C,&H2A2A,&H2C2C,&H1C1D,&H2C2C,&H2A2A,&H2C2A,&H1C1C,&H1C1C,&H2A2C,&H2A2A,&H2C2C,&H1C1D,&H2C2C,&H2A2A,&H2C2A,&H1C1C,&H191F,&H2C2C,&H2C2A,&H1E2C,&H1C1D,&H2C1D,&H2A2C,&H2C2C,&H191F,&H1C19,&H2C1C,&H2C2C,&H1E19,&H1C1D,&H1C1D,&H2C2C,&H1C2C,&H1C19,&H1C1C,&H1C1C,&H1C2C,&H1C1C,&H1C1D,&H1C1C,&H2C1C,&H1C1C,&H1C1C
DATA &H90,&H12,&H1C19,&H1C1C,&H1C1C,&H3919,&H3939,&H1C39,&H1C1C,&H1C1C,&H1C19,&H1C1C,&H1C1C,&H1C1C,&H3839,&H3939,&H3939,&H1C1C,&H1C1C,&H1C1C,&H2C1C,&H2C2C,&H3819,&H3938,&H3838,&H3839,&H1C39,&H2C2C,&H1C2C,&H2C2C,&H2C2A,&H382C,&H4138,&H3838,&H3838,&H2C39,&H2A2C,&H2C2C,&H2A2C,&H2A2A,&H382C,&H4141,&H4138,&H3838,&H2C38,&H2A2A,&H2C2A,&H2A2C,&H2A2A,&H412C,&H1F41,&H4141,&H4138,&H2C38,&H2A2A,&H2C2A,&H2A2C,&H2A2A,&H2C2A,&H2041,&H4141,&H4120,&H2A38,&H2A2A,&H2C2A,&H2C2C,&H2A2A,&H2C2A,&H4141,&H3F3F,&H4141,&H2A2C,&H2A2A,&H2C2C,&H2C1C,&H2C2C,&H2A2A,&H412C,&H4141,&H2C41,&H2A2A,&H2C2C,&H1C2C,&H1C1C,&H2C2C,&H2C2C,&H1C41,&H4141,&H4119,&H2C2C,&H2C2C,&H1C1C,&H2C1C,&H2A2C,&H1E2C,&H1C1D,&H1A1B,&H1819,&H2C18,&H2C2A,&H192C,&H2C1C,&H2A2A,&H1D1E,&H1C1D,&H1A1B,&H1919,&H1718,&H2A2A,&H1C2C,&H2C2C,&H422A,&H1D42,&H1C1C,&H1A1B,&H1919,&H4218,&H2A42,&H2C2C,&H2A2C,&H422A,&H2A42,&H1B1C,&H1A1B,&H1919,&H422A,&H2A42,&H2C2A,&H2C2C,&H2A2A,&H2A2A,&H1B1C,&H1A1B,&H191A,&H2A2A,&H2A2A,&H2C2C,&H2C1F,&H2A2C,&H2C2A,&H1B2C,&H1A1B,&H2C1A,&H2A2C,&H2C2A,&H192C,&H1C19,&H2C2C,&H2C2C,&H1B19,&H1A1B,&H1C1A,&H2C2C,&H2C2C,&H1C19,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1A1B,&H1C1C,&H1C1C,&H1C1C,&H1C1C
DATA &H90,&H12,&H1C19,&H1C1C,&H1C1C,&H3919,&H3939,&H1C39,&H1C1C,&H1C1C,&H1C19,&H1C1C,&H1C1C,&H1C1C,&H3839,&H3939,&H3939,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H382C,&H3938,&H3838,&H3839,&H2C39,&H1C1C,&H1C1C,&H1C1C,&H2C1C,&H382C,&H4138,&H3838,&H3838,&H2C39,&H1C2C,&H1C1C,&H1C1C,&H2A2C,&H382A,&H4141,&H4138,&H3838,&H2A38,&H2C2A,&H1C1C,&H1F1C,&H2A2C,&H412A,&H1F41,&H4141,&H4138,&H2A38,&H2C2A,&H1F1C,&H191C,&H2C2C,&H2A2A,&H2041,&H4141,&H4120,&H2A38,&H2C2C,&H191C,&H1C1C,&H2C1C,&H2A2C,&H4141,&H3F3F,&H4141,&H2C2A,&H1C2C,&H1C1C,&H1C1C,&H1C1C,&H2C2C,&H412C,&H4141,&H2C41,&H2C2C,&H1C1C,&H1C1C,&H1C1C,&H1C1C,&H2C2C,&H1C41,&H4141,&H4119,&H2C2C,&H1C1C,&H1C1C,&H191C,&H2C1C,&H1E2C,&H1C1D,&H1A1B,&H1819,&H2C18,&H1C2C,&H191C,&H1C1C,&H2C1C,&H1D1E,&H1C1D,&H1A1B,&H1919,&H1718,&H1C2C,&H1C1C,&H1C1C,&H422C,&H1D42,&H1C1C,&H1A1B,&H1919,&H4218,&H2C42,&H1C1C,&H1C1C,&H422C,&H2A42,&H1B1C,&H1A1B,&H1919,&H422A,&H2C42,&H1C1C,&H1C1C,&H2A2C,&H2A2A,&H1B1C,&H1A1B,&H191A,&H2A2A,&H2C2A,&H1C1C,&H191F,&H2A2C,&H2A2A,&H1B2C,&H1A1B,&H2C1A,&H2A2A,&H2C2A,&H191F,&H1C19,&H2C1C,&H2C2C,&H1B19,&H1A1B,&H1C1A,&H2C2C,&H1C2C,&H1C19,&H1C1C,&H1C1C,&H1C2C,&H1C1C,&H1A1B,&H1C1C,&H2C1C,&H1C1C,&H1C1C

I3ICO:
DATA &H90,&H12,&H1F1F,&H1F1F,&H1F1F,&H391F,&H3939,&H1F39,&H1F1F,&H1C1F,&H1F1F,&H1C1F,&H1C1C,&H1C1C,&H3839,&H3939,&H3939,&H1C1C,&H191C,&H1C1F,&H2C1F,&H2C2C,&H391C,&H3839,&H3939,&H3938,&H1F39,&H2C2C,&H1C2C,&H2C2C,&H2C2A,&H392C,&H3938,&H3938,&H3838,&H2C39,&H2A2C,&H2C2C,&H2A2C,&H2A2A,&H382C,&H3838,&H3838,&H3838,&H2C38,&H2A2A,&H2C2A,&H2A2C,&H2A2A,&H2C2C,&H3838,&H3838,&H3838,&H2C2C,&H2A2A,&H2C2A,&H2A2C,&H2A2A,&H2C2A,&H382C,&H3841,&H2C41,&H2A2C,&H2A2A,&H2C2A,&H2C2C,&H2A2A,&H2C2A,&H412C,&H4141,&H2C41,&H2A2C,&H2A2A,&H2C2C,&H2C1F,&H2C2C,&H2A2A,&H2C2C,&H4141,&H2C2C,&H2A2A,&H2C2C,&H1C2C,&H1C1F,&H2C2C,&H2C2C,&H2C2C,&H1C1D,&H2C2C,&H2C2C,&H2C2C,&H1C1F,&H2C1F,&H2A2C,&H2C2C,&H2C2C,&H1C1D,&H2C2C,&H2C2C,&H2C2A,&H1C2C,&H2C1F,&H2A2A,&H2C2A,&H1E2C,&H1C1D,&H2C1D,&H2A2C,&H2A2A,&H1C2C,&H2C2C,&H2A2A,&H2C2A,&H1E2C,&H1C1D,&H2C1D,&H2A2C,&H2A2A,&H2C2C,&H2A2C,&H2A2A,&H2A2A,&H2C2C,&H1C1D,&H2C2C,&H2A2A,&H2A2A,&H2C2A,&H2C2C,&H2A2A,&H2A2A,&H2C2C,&H1C1D,&H2C2C,&H2A2A,&H2A2A,&H2C2C,&H2C19,&H2A2C,&H2C2A,&H1E2C,&H1C1D,&H2C1D,&H2A2C,&H2C2A,&H192C,&H1F1F,&H2C2C,&H2C2C,&H1E1F,&H1C1D,&H1F1D,&H2C2C,&H2C2C,&H1F1F,&H1C1F,&H1C1C,&H1C1C,&H1C1C,&H1C1D,&H1C1C,&H1C1C,&H191C,&H1C1F
DATA &H90,&H12,&H1F1F,&H1F1F,&H1F1F,&H391F,&H3939,&H1F39,&H1F1F,&H1C1F,&H1F1F,&H1C1F,&H1C1C,&H1C1C,&H3839,&H3939,&H3939,&H1C1C,&H191C,&H1C1F,&H1C1F,&H191C,&H392C,&H3839,&H3939,&H3938,&H2C39,&H191C,&H1C1F,&H1C1F,&H2C1C,&H2C2C,&H3938,&H3938,&H3838,&H2C2C,&H192C,&H1C1F,&H1C1F,&H2C2C,&H2C2A,&H3838,&H3838,&H3838,&H2A2C,&H2C2C,&H1C1F,&H1C1F,&H2A2C,&H2C2A,&H3838,&H3838,&H3838,&H2A2C,&H2C2A,&H1C1F,&H1C1F,&H2A2C,&H2C2A,&H382C,&H3841,&H2C41,&H2A2C,&H2C2A,&H1C1F,&H191F,&H2C2C,&H2A2A,&H412C,&H4141,&H2C41,&H2A2A,&H2C2C,&H191F,&H1C1F,&H2C1C,&H2C2C,&H2C2C,&H4141,&H2C2C,&H2C2C,&H192C,&H1C1F,&H1C1F,&H1C1C,&H2C2C,&H2C2C,&H1C1D,&H2C2C,&H2C2C,&H191C,&H1C1F,&H1C1F,&H191C,&H2A2C,&H2C2C,&H1C1D,&H2C2C,&H2C2A,&H191C,&H1C1F,&H1C1F,&H2C1C,&H2A2A,&H1E2C,&H1C1D,&H2C1D,&H2A2A,&H192C,&H1C1F,&H1C1F,&H2A2C,&H2A2A,&H1E2C,&H1C1D,&H2C1D,&H2A2A,&H2C2A,&H1C1F,&H1C1F,&H2A2C,&H2A2A,&H2C2C,&H1C1D,&H2C2C,&H2A2A,&H2C2A,&H1C1F,&H1C1F,&H2A2C,&H2A2A,&H2C2C,&H1C1D,&H2C2C,&H2A2A,&H2C2A,&H1C1F,&H1919,&H2C2C,&H2C2A,&H1E2C,&H1C1D,&H2C1D,&H2A2C,&H2C2C,&H1919,&H1F1F,&H2C1F,&H2C2C,&H1E1F,&H1C1D,&H1F1D,&H2C2C,&H1C2C,&H1F1F,&H1C1F,&H1C1C,&H1C2C,&H1C1C,&H1C1D,&H1C1C,&H2C1C,&H191C,&H1C1F

WinLine:
DATA " WINS BY SKILL!"," IS, OF COURSE, VICTORIOUS!"
DATA ", LIKE ALWAYS, IS THE CHAMPION!"," EASILY WHIPS THE WORTHLESS OPPONENT!"
DATA "'S SKILL WINS THE ROUND!"," IS TRULY THE PONGMASTER!"
DATA "... CAN ANYONE BEAT THIS ONE?"," THE INVINCIBLE, AT BEST!"
DATA " DOES IT AGAIN!"," SHAMES THE OPPONENT ONCE AGAIN!"

CStat:
DATA "RIGOR",115,60,"MORTIS",135,40,"RYAN",150,25,"AEDES",100,75
DATA "MINERVA",75,100,"SIEZURE",120,55,"RAIDEN",160,15,"PIRANHA",60,115
DATA "NULL",0,0
DATA "ALLEGRO",70,160,"SILO",500,1,"DUBHE",100,160,"MERAK",160,100
DATA "NULL",0,0
DATA "?????",999,1

ANames:
DATA "NUKE","SHRAPNEL","HIM","S.STRIKE","C.EXPLODE","HIM","L.SHOCK","OBFUSCATE","IT"
DATA "HARM BALL","DISPEL","HIM","HEAL BALL","CTRL BALL","HER","FIREBALL","E.STREAM","HIM"
DATA "H.SWORD","LANCE","HIM","FOCUS","DISTORT","HIM","NULLER","NULLIFY","IT"
DATA "LASER","GRAVIS","THIS ONE","NONE","NONE","THIS ONE"

CShow:
LINE (50, 15)-(270, 45), 0, BF
RESTORE CStat: FOR sv = 0 TO Sel: READ NM$, MHP, MMP: NEXT sv
RESTORE ANames: FOR sv = 0 TO Sel: READ ATK1$, ATK2$, GEN$: NEXT sv
SPRINT NM$ + STRING$(7 - LEN(NM$), " ") + ":" + STR$(MHP) + " HP  " + STR$(MMP) + " MP", 55, 20, 31, 55, 4, 2, 1
SPRINT "ATTACKS: " + ATK1$ + ", " + ATK2$, 55, 27, 45, 55, 4, 2, 1
SPRINT "WANT " + GEN$ + "? (Y/N)", -2, 35, 44, 40, 4, 2, 1
RETURN
CShow2:
1 a$ = UCASE$(INPUT$(1)): IF INSTR("YN", a$) = 0 THEN GOTO 1 ELSE IF a$ = "N" THEN PUT (0, 0), a%(0), PSET: LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel AND 1) * 100, 78 + (Sel \ 2) * 23), 31, B: GOTO CChs
IF PL1 = -1 THEN
LINE (50, 15)-(270, 45), 0, BF
SPRINT "CHOOSE SAME CHARACTER", -2, 23, 31, 25, 4, 2, 1
SPRINT "FOR TOURNAMENT", -2, 33, 31, 25, 4, 2, 1
TDelay 2
END IF
PUT (0, 0), a%(0), PSET: LINE (68 + (Sel AND 1) * 100, 59 + (Sel \ 2) * 23)-(153 + (Sel AND 1) * 100, 78 + (Sel \ 2) * 23), 31, B
RETURN

BossAEnd:
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
FOR sv = 0 TO 10: GET (1 * 16, Y1 * 16 + 8)-(1 * 16 + 17, Y1 * 16 + 8 + 36 + 17 - sv), a%(0): PUT (1 * 16, Y1 * 16 + 8 + sv), a%(0), PSET: TDelay .01: NEXT sv
PALETTE 1, 4144959: LINE (1 * 16, Y1 * 16 + 8)-(1 * 16 + 17, Y1 * 16 + 8 + 36 + 17), 1, BF: FOR sv = 63 TO 0 STEP -3: PALETTE 1, sv + sv * 256 + sv * 65536: TDelay .05: NEXT sv
FOR sv = 319 TO 0 STEP -1: LINE (sv, 0)-(319 - sv, 199), 21 + (sv / 319) * 10: NEXT sv: FOR sv = 0 TO 199: LINE (0, sv)-(319, 199 - sv), 21 + (sv / 319) * 10: NEXT sv: FOR sv = 319 TO 0 STEP -1: LINE (sv, 0)-(319 - sv, 199), 0: NEXT sv: FOR sv = 0  _
TO 199: LINE (0, sv)-(319, 199 - sv), 0: NEXT sv: TDelay 1
CLS : SCREEN 12: SCREEN 0: COLOR 0: PRINT CHR$(PL2 + 230); CHR$(XL1 + 230); NM1$
RUN "xsend.RM2"
GOTO BossPickup

BossBEnd:
IF PL1 <> 14 THEN
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
FOR sv = 0 TO 10: GET (1 * 16, Y1 * 16 + 8)-(1 * 16 + 17, Y1 * 16 + 8 + 36 + 17 - sv), a%(0): PUT (1 * 16, Y1 * 16 + 8 + sv), a%(0), PSET: TDelay .01: NEXT sv
PALETTE 1, 4144959: LINE (1 * 16, Y1 * 16 + 8)-(1 * 16 + 17, Y1 * 16 + 8 + 36 + 17), 1, BF: FOR sv = 63 TO 0 STEP -3: PALETTE 1, sv + sv * 256 + sv * 65536: TDelay .05: NEXT sv
TDelay 1
PUT (1 * 16, Y1 * 16 + 8), D%(0, 0), PSET: TDelay .1: SOUND 40, .1: PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: TDelay .1: PUT (1 * 16, Y1 * 16 + 8 + 18), D%(0, 0), PSET: TDelay .1: SOUND 40, .1: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, 13), PSET:    _
TDelay .1: PUT (1 * 16, Y1 * 16 + 8 + 36), D%(0, 0), PSET: TDelay .1: SOUND 40, .1: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
FOR sv = 0 TO 140 STEP 5: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "?????: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "HMPH.  MERAK WAS TOO WEAK.  ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "                            ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "?????: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "PERHAPS MY INSECT AND I WILL", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "CHALLENGE YOU INSTEAD...    ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1): ILoad "LB2.RLV": PUT (0, 0), a%(0), PSET: NM0$ = "?????": PL1 = 14
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
HP(0) = 999: MHP(0) = 999: Stat 3
FOR sv = .15 TO .01 STEP -.01: SOUND 40, .1: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, 13), PSET: TDelay sv: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, 14), PSET: TDelay sv: NEXT sv
WHTB = 1: BX = 18 * 16 - 9: BY = (Y2 + 1) * 16 + 16: BTP = BlTm
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
WHTB = 1 - WHTB: BIP = 0: BlTm = .0001: BCNT = 0: SWeap(0) = 0: SWeap(1) = 0: FirW1 = 0: FirW2 = 0: GRV = 0: GRVC = 0
BF = -2: OKFL2 = 0: OKFL = 0
GOTO MPad
ELSE
FOR sv = 0 TO 140 STEP 5: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "?????: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "W-WHAT HAPPENED?!  DID I... ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "LOSE?   IMPOSSIBLE!         ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "?????: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "I WON'T DIE!                ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "                            ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), a%(0), PSET
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
GET (0, 0)-(319, 199), a%(0)
FOR svv = 0 TO 35: XX = INT(RND * 18): TClip 0, XX \ 2, a%(), XX: TDelay .01: SOUND 40, .1: FOR sv = 0 TO 10: CIRCLE (1 * 16 + XX, Y1 * 16 + 8 + (XX / 18) * 72 - XX), sv, (sv / 10) * 4 + 40: NEXT sv, svv
PLAY "mbl64n6n5n7n4n8n3n9n2n10n1": PALETTE 1, 4144959: FOR sv = 0 TO 100 STEP 5: LINE (0, 100 - sv)-(319, 100 - (sv - 10)), 1, BF: LINE (0, 100 + sv)-(319, 100 + (sv - 10)), 1, BF: TDelay .01: NEXT sv
FOR sv = 63 TO 0 STEP -3: PALETTE 1, sv + sv * 256 + sv * 65536: TDelay .01: NEXT sv
CLS : SCREEN 12: SCREEN 0: COLOR 0: PRINT NM1$
RUN "x2end.RM2"
END IF

Insect:
CBX = -CBX: CBY = -CBY
IF PL1 = 14 THEN
CBX = ABS(CBX): CBY = ABS(CBY)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "?????: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "GO, MY PET...!              ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "                            ", -1, 22, 31, 57, 4, 2, 1
TDelay 1: PUT (0, 0), a%(0), PSET: Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
END IF
IF CBX > 0 THEN PLX = 1 ELSE PLX = 0
IF INT(RND * 2) = 0 THEN FireStorm PLX ELSE IF INT(RND * 1) = 0 THEN BlockHeat PLX
RETURN

Level0:
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

Level1:
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

Level2:
DATA 1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

Level3:
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0
DATA 0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0
DATA 0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

LevelB1:
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1


Level4:
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0
DATA 0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0
DATA 0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

Level5:
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

Level6:
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

Level7:
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

'PUT (0, 0), A%(0), PSET
'PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
'PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
'GET (0, 0)-(319, 199), A%(0)

'FOR svv = 0 TO 50: XX = INT(RND * 18): TClip 0, XX \ 2, A%(), XX: TDelay .01: SOUND 40, .1: FOR sv = 0 TO 10: CIRCLE (1 * 16 + XX, Y1 * 16 + 8 + (XX / 18) * 72 - XX), sv, (sv / 10) * 4 + 40: NEXT sv, svv

'LINE (156, 1)-(134, 3), 112, BF: LINE (160, 1)-(182, 3), 112, BF
'LINE (134, 1)-(134 + (HP(0) / MHP(0)) * 22, 3), 40, BF: LINE (182, 1)-(182 - (HP(1) / MHP(1)) * 22, 3), 40, BF
'LINE (156, 5)-(134, 6), 122, BF: LINE (160, 5)-(182, 6), 122, BF
'LINE (134, 5)-(134 + (MP(0) / MMP(0)) * 22, 6), 45, BF: LINE (182, 5)-(182 - (MP(1) / MMP(1)) * 22, 6), 45, BF

SUB BlockHeat (SD)
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "BLOCK", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "HEAT!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay 1
FOR svv = 0 TO 50
FOR sv = 0 TO 6.28 STEP .5
PUT (160 + SIN(sv + svv) * (50 - svv), 100 + COS(sv + svv) * svv), D%(0, 1), PSET
NEXT sv: NEXT svv
TDelay 1
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "SOME", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "DAMAGE!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay 1
PUT (0, 0), a%, PSET
HP(SD) = HP(SD) - (INT(RND * (MHP(SD) - HP(SD))) + CINT(HP(SD) / 4))
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB CExplode (SD)
'MORTIS' WEAPON 2
Dmg = 40: MCost = 30
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF

FOR sv = 5 TO 9: PALETTE sv - 2, INT((sv / 9) * 40) * 256: NEXT sv
FOR sv = 25 TO 31.2 STEP 1.04
IF (sv < 28.12 OR sv > 29.17) THEN LINE (160 + SIN(sv) * 30, 60 + COS(sv) * 10)-(160 + SIN(sv) * 30, 140 + COS(sv) * 10), 7
LINE (160 + SIN(sv) * 30, 60 + COS(sv) * 10)-(160 + SIN(sv + 1.04) * 30, 60 + COS(sv + 1.04) * 10), 7
IF (sv < 27.08 OR sv > 29.17) THEN LINE (160 + SIN(sv) * 30, 140 + COS(sv) * 10)-(160 + SIN(sv + 1.04) * 30, 140 + COS(sv + 1.04) * 10), 7
NEXT sv
PAINT (150, 100), 3, 7: PAINT (160, 100), 4, 7: PAINT (185, 100), 5, 7: PAINT (160, 60), 6, 7
FOR svv = 0 TO 23: FOR sv = 5 TO 9: PALETTE sv - 2, INT((sv / 9) * 40 + svv) * 256: NEXT sv, svv
TDelay .5
FOR sv = 0 TO 100: CIRCLE (160, 100), sv, 31 - ((sv / 100) * 10), 2.82 - (((sv ^ .5) / 100 ^ .5) * .9599), .19 + (((sv ^ .5) / 100 ^ .5) * 1.09), 1 / 5: NEXT sv
TDelay .2
LINE (0, 0)-(319, 199), 31, BF: PLAY "l64n80n75n79n76n1n5n2n3n4n3n2n5"
IF SD = 0 THEN PLN = PL2: YN = Y2 ELSE PLN = PL1: YN = Y1
'IF INSTR(" 1 2 6 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
HP(1 - SD) = HP(1 - SD) - Dmg
HP(SD) = HP(SD) - Dmg
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""

END SUB

SUB CtrlBall (SD)
'MINERVA'S SPELL 2
MCost = 20
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
BL = 3: PLAY "mbl64n80n75n79"
MP(SSD) = MP(SSD) - MCost
Stat 4
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB Dispel (SD)
'AEDES'S SPELL 2
MCost = 5
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
IF OBF > 0 THEN IF OBF = 1 THEN OBF = 2 ELSE OBF = 1
IF BL = 1 THEN BL = 2 ELSE IF BL = 2 THEN BL = 1
IF BL = 3 THEN BL = 0 ELSE IF BL = 0 THEN BL = 3
GRV = 0: GRVC = 0
PALETTE 1, 0: PALETTE 8, 0
FOR sv = 0 TO 25
CIRCLE (160, 100), sv * 4, ABS(sv AND 1) * 7 + 1
PAINT (160, 100), ABS(sv AND 1) * 7 + 1, ABS(sv AND 1) * 7 + 1
TDelay .01
NEXT sv
FOR sv = 0 TO 3.14 * 20 STEP .25: PSET (SIN(sv) * 1.5 * sv + 160, COS(sv) * 1.25 * sv + 100), 40 + sv: NEXT sv
PLAY "mbl64n80n1n60n20n40n5n1n3n80n75n77"
DIM I1%(156, 191)
FOR sv = 8 TO 199
GET (5, sv)-(314, sv), I1%(0, sv - 8)
NEXT sv
FOR svv = 0 TO 15
FOR sv = 8 TO 199
ii = ii + .01
ei = ei + ii
IF ii > .3 THEN ii = 0: ei = 0
PUT (ABS(((sv + ei) MOD 10) - 5) + 2, sv), I1%(0, sv - 8), PSET
NEXT sv, svv
MP(SSD) = MP(SSD) - MCost
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "SPELLS", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "REFRACT!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB Distort (SD)
'PIRANHA'S SPELL 2
MCost = 1
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
DIM I1%(156, 191)
FOR sv = 8 TO 199
GET (5, sv)-(314, sv), I1%(0, sv - 8)
NEXT sv
FOR svv = 0 TO 15
FOR sv = 8 TO 199
ii = ii + .01
ei = ei + ii
IF ii > .3 THEN ii = 0: ei = 0
PUT (ABS(((sv + ei) MOD 10) - 5) + 2, sv), I1%(0, sv - 8), PSET
NEXT sv, svv
MP(0) = 0: MP(1) = 0
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "MAGIC", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "DRAINED!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay 1
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB EStream (SD)
'SIEZURE'S WEAPON 2
Dmg = 30: MCost = 10
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF SWeap(SD) = 0 THEN
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
MP(SSD) = MP(SSD) - MCost: Stat SD
SWeap(SD) = 1
PALETTE 4, 63 + 63 * 256
IF SD = 0 THEN WY(SD) = Y1 * 16 + 8 + 23 ELSE WY(SD) = Y2 * 16 + 8 + 23
WX(SD) = 50 * (1 - SD) + 265 * SD
END IF
IF SWeap(SD) = 1 THEN
WX(SD) = WX(SD) + 7 * (1 - SD) - 7 * SD
WY(SD) = WY(SD) + (WX(SD) < 156 - 25 * (SD * 2 - 1)) - (WX(SD) >= 156 - 25 * (SD * 2 - 1)): TDelay .005

'LINE (WX(SD) + 29 * (SD * 2 - 1), WY(SD) - 4)-(WX(SD) + 40 * (SD * 2 - 1), WY(SD) + 4), 3, BF
'LINE (WX(SD) + 7 * (SD * 2 - 1), WY(SD) - 4)-(WX(SD), WY(SD) + 4), 4, BF
'CIRCLE (SIN(WX(SD) / 10) * 30 + WX(SD), COS(WY(SD) / 10) * 30 + WY(SD)), 4, 40
PUT (SIN(WX(SD) / 10) * 30 + WX(SD), COS(WY(SD) / 10) * 30 + WY(SD)), B%(0, 2), PSET
IF (SIN(WX(SD) / 10) * 30 + WX(SD)) > (18 * 16 - 9) OR (SIN(WX(SD) / 10) * 30 + WX(SD)) < (16 + 17) THEN SWeap(SD) = -1
END IF
IF SWeap(SD) < 0 THEN
IF SD = 0 THEN YN = Y2: PLN = PL2 ELSE PLN = PL1: YN = Y1
'FOR sv = 63 TO 0 STEP -3: TDelay .005: PALETTE 4, sv + sv * 256: NEXT sv
IF INSTR(" 1 2 6 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
IF (COS(WY(SD) / 10) * 30 + WY(SD)) < (YN * 16 + 8 - 2) OR (COS(WY(SD) / 10) * 30 + WY(SD)) > (YN * 16 + 8 + 53 + 2) THEN Dmg = 0
HP(1 - SD) = HP(1 - SD) - Dmg
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
'PUT (0, 0), A%, PSET
TClip 0, 8, a%(), 8
Stat (1 - SD)
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
SWeap(SD) = 0: IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
IF GRVC = 1 THEN SWeap(0) = 0: SWeap(1) = 0: FirW1 = 0: FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END IF

END SUB

SUB EyeHeal (SD)
IF MP(SD) = 0 THEN EXIT SUB
PALETTE 1, 4144959
LINE (160, 100)-(160, 100), 1
FOR svv = 0 TO 19
FOR sv = 0 TO 7 STEP .5
LINE -(160 + SIN(sv + svv) * (50 - svv), 100 + COS(sv + svv) * svv), 1
NEXT sv: TDelay .01: NEXT svv
FOR sv = 18 TO 0 STEP -1: CIRCLE (160, 100), sv, sv + 75: PAINT (160, 100), sv + 75, sv + 75: NEXT sv
FOR sv = 63 TO 0 STEP -12: PALETTE 1, 63 + sv * 256 + sv * 65536: TDelay .01: NEXT sv
FOR sv = 0 TO 63 STEP 12: PALETTE 1, (63 - sv) + sv * 256 + sv * 65536: TDelay .01: NEXT sv
FOR sv = 63 TO 0 STEP -12: PALETTE 1, 63 * 256 + sv * 65536: TDelay .01: NEXT sv
FOR sv = 0 TO 63 STEP 12: PALETTE 1, (63 - sv) * 256 + sv * 65536: TDelay .01: NEXT sv
FOR sv = 0 TO 63 STEP 12: PALETTE 1, sv + sv * 256 + 63 * 65536: TDelay .01: NEXT sv
IF SD = 0 THEN YN = Y1 ELSE YN = Y2
SD = (1 - SD)
FOR sv = 0 TO 27: LINE (160, 100)-(ABS(SD = 0) * 253 + 34, YN * 16 + 35 - sv), 44: LINE (160, 100)-(ABS(SD = 0) * 253 + 34, YN * 16 + 35 + sv), 44: TDelay .01: NEXT sv
SD = (1 - SD)
TDelay .5
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "EYE", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "HEAL!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay 1
PUT (0, 0), a%, PSET
HP(SD) = HP(SD) + CINT(MHP(SD) / 4): IF HP(SD) > MHP(SD) THEN HP(SD) = MHP(SD)
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB FireBall (SD)
'SIEZURE'S SPELL 1
Dmg = 40: MCost = 15
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
ssv = .2
FOR TCrc = 0 TO 5.5 STEP .1
sv = sv + .3
svv = svv + ssv: ssv = ssv * SGN((svv >= 30) * 2 + 1): ssv = ssv * SGN((svv <= 0) * 2 + 1)
TrX = 25 + (272 * (1 - SD)) + SIN(TCrc) * (50 - (TCrc / 5.5) * 50): TrY = 100 + COS(TCrc) * (50 - (TCrc / 5.5) * 50)
LINE (TrX + SIN(2.09 + sv) * svv, TrY + COS(2.09 + sv) * svv)-(TrX + SIN(2.09 * 2 + sv) * svv, TrY + COS(2.09 * 2 + sv) * svv), 40 + (TCrc / 5.5) * 4
LINE (TrX + SIN(2.09 + sv) * svv, TrY + COS(2.09 + sv) * svv)-(TrX + SIN(2.09 * 3 + sv) * svv, TrY + COS(2.09 * 3 + sv) * svv), 40 + (TCrc / 5.5) * 4
LINE (TrX + SIN(2.09 * 2 + sv) * svv, TrY + COS(2.09 * 2 + sv) * svv)-(TrX + SIN(2.09 * 3 + sv) * svv, TrY + COS(2.09 * 3 + sv) * svv), 40 + (TCrc / 5.5) * 4
TDelay .01
NEXT TCrc
PLAY "l64n1n3n5n2n4"
IF SD = 0 THEN PLN = PL2: YN = Y2 ELSE PLN = PL1: YN = Y1
IF INSTR(" 0 3 4 7 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
IF YN < 3 OR YN > 6 THEN Dmg = 0
HP(1 - SD) = HP(1 - SD) - Dmg
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB FireStorm (SD)
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "FIRE", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "STORM!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay 1
FOR svv = 0 TO 170 STEP 28: XX = svv: FOR sv = 1.5 TO 0 STEP -.05: PUT ((300 - SIN(sv) * 300) * ABS(SD = 1) + SIN(sv) * 300 * ABS(SD = 0), COS(sv) * XX + 8), D%(0, 0), PSET: PUT ((300 - SIN(sv) * 300) * ABS(SD = 1) + SIN(sv) * 300 * ABS(SD = 0), COS _
(sv) * XX + 8), B%(0, 2), PSET: NEXT sv, svv
TDelay .5
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "QUARTER", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "DAMAGE!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay 1
PUT (0, 0), a%, PSET
HP(SD) = HP(SD) - CINT(MHP(SD) / 4)
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB Focus (SD)
'PIRANHA'S SPELL 1
Dmg = 15: MCost = 15
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
CL = 1: PALETTE 1, 0
FOR sv = (1 - SD) * 319 TO 100 * SD + (1 - SD) * 219 STEP SD * 2 - 1: LINE (319 - sv, 0)-(0, (sv / 319) * 199), CL: LINE (319 - sv, 0)-(319, 199 - (sv / 319) * 199), CL: LINE (319 - sv, 199)-(0, 199 - (sv / 319) * 199), CL: LINE (319 - sv, 199)-(319 _
, (sv / 319) * 199), CL: NEXT sv
FOR sv = -63 TO 63 STEP 3: TDelay .001: PALETTE 1, (63 - ABS(sv)) * 65536: NEXT sv
IF SD = 0 THEN PLN = PL2: YN = Y2 ELSE PLN = PL1: YN = Y1
IF INSTR(" 0 3 4 7 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
IF YN < 3 OR YN > 5 THEN Dmg = 0
HP(1 - SD) = HP(1 - SD) - Dmg
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB Gravis (SD)
'ALLEGRO'S SPELL 2
Dmg = 0: MCost = 30
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
DIM I1%(400, 79)
FOR sv = 0 TO 316 STEP 4
GET (sv, 8)-(sv + 3, 189), I1%(0, sv / 4)
NEXT sv
FOR svv = 0 TO 15
FOR sv = 0 TO 79
PUT (sv * 4, (194 + SIN((sv + svv)) * 5) - 181), I1%(0, sv), PSET
NEXT sv, svv
ERASE I1%
DIM I1%(156, 191)
FOR sv = 8 TO 199
GET (5, sv)-(314, sv), I1%(0, sv - 8)
NEXT sv
FOR svv = 5.5 TO 95.5 STEP 5
FOR sv = 0 TO 95.5 - svv STEP 2
PUT (5, 103.5 + sv + svv), I1%(0, INT(103.5 + svv) - sv - 8), PSET
PUT (5, 103.5 - sv - svv), I1%(0, INT(103.5 - svv) + sv - 8), PSET
NEXT sv
NEXT svv
GRV = 3
IF SD = 0 THEN PLN = PL2: YN = Y2 ELSE PLN = PL1: YN = Y1
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "GRAVIS", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "ACTIVE!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay 1
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB HarmBall (SD)
'AEDES'S SPELL 1
MCost = 15
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
BL = 2: PLAY "mbl64n80n75n79"
MP(SSD) = MP(SSD) - MCost
Stat 4
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB HealBall (SD)
'MINERVA'S SPELL 1
MCost = 20
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
BL = 1: PLAY "mbl64n80n75n79"
MP(SSD) = MP(SSD) - MCost
Stat 4
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB HSword (SD)
'RAIDEN'S WEAPON 1
Dmg = 20: MCost = 5
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
IF SD = 0 THEN PLN = PL2: YN = Y2 ELSE YN = Y1: PLN = PL1
PALETTE 1, 0: PALETTE 8, 0
FOR sv = 0 TO 25
CIRCLE (160, 90), sv * 2, ABS(sv AND 1) * 15 + 1
PAINT (160, 90), ABS(sv AND 1) * 15 + 1, ABS(sv AND 1) * 15 + 1
TDelay .01
NEXT sv
FOR sv = 0 TO 23
TDelay .01
CIRCLE (160, 90), 50, ABS(sv AND 1) * 7 + 1
PAINT (160, 90), ABS(sv AND 1) * 7 + 1, ABS(sv AND 1) * 7 + 1
DRAW "s" + STR$(ABS(sv < 12) * (sv + 1) + ABS(sv >= 12) * 12) + "ta" + STR$(INT(((sv MOD 12) / 12) * 360 + 30)) + "bm160,94bl1c40u10efd15l2u5d5c55l3r8d2l3d2l2u2l3u2"
NEXT sv
FOR sv = 0 TO 27: LINE (160, 60)-(ABS(SD = 0) * 253 + 34, YN * 16 + 35 - sv), 44: LINE (160, 60)-(ABS(SD = 0) * 253 + 34, YN * 16 + 35 + sv), 44: TDelay .01: NEXT sv
TDelay .5
IF INSTR(" 1 2 6 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
HP(1 - SD) = HP(1 - SD) - Dmg
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
END SUB

SUB ILoad (Msg$)
DEF SEG = VARSEG(a%(0))
BLOAD Msg$, VARPTR(a%(0))
DEF SEG
END SUB

SUB Intro
Intro1
Intro2
Intro3
END SUB

SUB Intro1
DIM I1%(117, 4), I2%(1756, 4), I3%(32001)
PLAY "mb"
FOR sv = 4 TO 15: PALETTE sv - 3, CINT(sv * 4.2) + CINT(sv * 4.2 / 4 * 3) * 256 + CINT(sv * 4.2 / 2) * 65536: NEXT sv
DEF SEG = VARSEG(I3%(0))
BLOAD "INTRO1.RM2", VARPTR(I3%(0))
DEF SEG
PUT (0, 0), I3%(0), PSET
StTm = TIMER
DO: LOOP UNTIL INKEY$ = ""
DO
GET (1, 0)-(21, 10), I1%(0, 0): GET (1, 11)-(16, 18), I1%(0, 1): GET (1, 19)-(11, 24), I1%(0, 2): GET (1, 25)-(6, 28), I1%(0, 3): GET (1, 29)-(1, 31), I1%(0, 4)
GET (22, 0)-(318, 10), I2%(0, 0): GET (17, 11)-(318, 18), I2%(0, 1): GET (12, 19)-(318, 24), I2%(0, 2): GET (7, 25)-(318, 28), I2%(0, 3): GET (2, 29)-(318, 31), I2%(0, 4)
PUT (298, 0), I1%(0, 0), PSET: PUT (303, 11), I1%(0, 1), PSET: PUT (308, 19), I1%(0, 2), PSET: PUT (313, 25), I1%(0, 3), PSET: PUT (318, 29), I1%(0, 4), PSET
PUT (1, 0), I2%(0, 0), PSET: PUT (1, 11), I2%(0, 1), PSET: PUT (1, 19), I2%(0, 2), PSET: PUT (1, 25), I2%(0, 3), PSET: PUT (1, 29), I2%(0, 4), PSET

GET (0, 199 - 30)-(0, 199 - 29), I1%(0, 0): GET (0, 199 - 28)-(2, 199 - 25), I1%(0, 1): GET (0, 199 - 24)-(4, 199 - 18), I1%(0, 2): GET (0, 199 - 17)-(7, 199 - 10), I1%(0, 3): GET (0, 199 - 9)-(9, 199), I1%(0, 4)
GET (1, 199 - 30)-(319, 199 - 29), I2%(0, 0): GET (3, 199 - 28)-(319, 199 - 25), I2%(0, 1): GET (5, 199 - 24)-(319, 199 - 18), I2%(0, 2): GET (8, 199 - 17)-(319, 199 - 10), I2%(0, 3): GET (10, 199 - 9)-(319, 199), I2%(0, 4)
PUT (319, 199 - 30), I1%(0, 0), PSET: PUT (317, 199 - 28), I1%(0, 1), PSET: PUT (315, 199 - 24), I1%(0, 2), PSET: PUT (312, 199 - 17), I1%(0, 3), PSET: PUT (310, 199 - 9), I1%(0, 4), PSET
PUT (0, 199 - 30), I2%(0, 0), PSET: PUT (0, 199 - 28), I2%(0, 1), PSET: PUT (0, 199 - 24), I2%(0, 2), PSET: PUT (0, 199 - 17), I2%(0, 3), PSET: PUT (0, 199 - 9), I2%(0, 4), PSET

IF INT(RND * 100) + 1 <= 5 THEN PALETTE 0, 63 + 63 * 256 + 63 * 65536: SOUND 47, 1: SOUND 47, 0: FL = 1 ELSE IF FL = 1 THEN FL = 0: PALETTE 0, 0
IF TIMER - StTm >= 3 AND Sstm = 0 THEN Sstm = 1: SPRINT "ONCE, THE HOUSE OF", -2, 100 - 62 + 10, 44, 41, 4, 2, 1: SPRINT "MORTIS SURVIVED IN A", -2, 100 - 52 + 10, 44, 41, 4, 2, 1: SPRINT "CASTLE UPON THE SHORE", -2, 100 - 42 + 10, 44, 41, 4, 2, 1
TDelay .05
LOOP WHILE INKEY$ = ""
PALETTE 0, 0
END SUB

SUB Intro2
DIM I2%(32001), I3%(163, 4), I4%(10000)
RESTORE I2ICO: FOR svv = 0 TO 3: FOR sv = 0 TO 163: READ I3%(sv, svv): NEXT sv, svv
DEF SEG = VARSEG(a%(0))
BLOAD "RTOP.RM2", VARPTR(a%(0))
DEF SEG
DEF SEG = VARSEG(I2%(0))
BLOAD "RBOT.RM2", VARPTR(I2%(0))
DEF SEG
TClip 0, 0, a%(), 8: I2%(1) = 16: TClip 0, 191, I2%(), 8
PALETTE
FOR sv = 0 TO 30
PUT (9 * 16, 11 * 16), I3%(0, (sv AND 1)), PSET
TDelay .1
NEXT sv
FOR sv = 8 TO 108 STEP 3
TClip 0, 0, a%(), sv
PUT (9 * 16, 11 * 16 - (sv - 8)), I3%(0, (sv AND 1)), PSET
I2%(1) = sv + 8
TClip 0, 200 - sv, I2%(), 8
PUT (9 * 16, 11 * 16 - (sv - 8)), I3%(0, (sv AND 1)), PSET
TDelay .05
NEXT sv
GET (0, 0)-(319, 50), I4%
FOR sv = 0 TO 10: PUT (9 * 16, 4 * 16 + 13), I3%(0, (sv AND 1)), PSET: TDelay .1: NEXT sv
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "VOICE: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "HE'S DEAD!  NOW LOOK WHAT YOU", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "HAVE DONE...", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
FOR sv = 0 TO 20: PUT (9 * 16, 4 * 16 + 13), I3%(0, 2 + (sv AND 1)), PSET: TDelay .1: NEXT sv
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "VOICE: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "WHAT WILL HAPPEN TO THE ESTATE?", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "HOW ABOUT HIS 8 CHILDREN?", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
FOR sv = 0 TO 10: PUT (9 * 16, 4 * 16 + 13), I3%(0, 2 + (sv AND 1)), PSET: TDelay .1: NEXT sv
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "FAIRY: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "DEAD?  I'D BETTER CHECK THIS ONE", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "OUT!  I HOPE RIGOR MORTIS IS OK!", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
GET (9 * 16, 7 * 16 + 13)-(9 * 16 + 17, 7 * 16 + 13 + 17), I4%
GET (11 * 16, 4 * 16 + 13)-(11 * 16 + 17, 4 * 16 + 13 + 17), I3%(0, 4)
FOR sv = 5 TO 7: PUT (9 * 16, (sv - 1) * 16 + 13), I3%(0, 4), PSET: PUT (9 * 16, sv * 16 + 13), I3%(0, 3), PSET: TDelay .2: NEXT sv
PUT (9 * 16, 7 * 16 + 13), I4%, PSET
TDelay 2
FOR sv = 108 TO 191 STEP 3
TClip 0, 0, a%(), sv
I2%(1) = sv + 8
TClip 0, 200 - sv, I2%(), 8
TDelay .05
NEXT sv
TDelay 2
END SUB

SUB Intro3
DIM I2%(32001), I3%(163, 2), I4%(10000)
RESTORE I3ICO: FOR svv = 0 TO 1: FOR sv = 0 TO 163: READ I3%(sv, svv): NEXT sv, svv
DEF SEG = VARSEG(a%(0))
BLOAD "RTOP2.RM2", VARPTR(a%(0))
DEF SEG
DEF SEG = VARSEG(I2%(0))
BLOAD "RBOT2.RM2", VARPTR(I2%(0))
DEF SEG
TClip 0, 0, a%(), 192: TClip 0, 8, I2%(), 8
GET (9 * 16, 7 * 16 + 8)-(9 * 16 + 17, 7 * 16 + 8 + 17), I3%(0, 2)
GET (0, 0)-(319, 50), I4%
FOR sv = 0 TO 20: PUT (9 * 16, 7 * 16 + 8), I3%(0, (sv AND 1)), PSET: TDelay .1: NEXT sv
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "FAIRY: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "MY GOODNESS!  WHAT HAPPENED?!", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "RIGOR MORTIS!  IS HE OKAY?", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
FOR sv = 7 TO 1 STEP -1: PUT (9 * 16, sv * 16 + 8), I3%(0, 2), PSET: PUT (9 * 16, (sv - 1) * 16 + 8), I3%(0, (sv AND 1)), PSET: TDelay .2: NEXT sv: PUT (9 * 16, sv * 16 + 8), I3%(0, 2), PSET
TDelay 3
FOR sv = 192 TO 8 STEP -3
I2%(1) = sv + 8
TClip 0, 0, a%(), sv: TClip 0, 200 - sv, I2%(), 8
TDelay .05
NEXT sv
GET (0, 0)-(319, 50), I4%
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "ROBOT: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "FAIRY MINERVA, I AM AFRAID THAT", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "RIGOR MORTIS HAS PERISHED.", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "FAIRY: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "BUT HOW...", -1, 15, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "MAGE : ", 25, 15, 44, 56, 4, 2, 1: SPRINT "WE SAW TWO PEOPLE FLEEING TOWARD", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "THE SHORE.", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "TICK : ", 25, 15, 44, 56, 4, 2, 1: SPRINT "YEAH, AND WE COULDN'T TELL WHO", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "THEY WERE, EITHER!        ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "FAIRY: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "NONE OF YOU FOLLOWED?  HOW CAN", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "YOU BE SO...              ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "MAGE : ", 25, 15, 44, 56, 4, 2, 1: SPRINT "THEY ESCAPED BEFORE WE COULD  ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "PURSUE!  THERE WAS NOTHING", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "MAGE : ", 25, 15, 44, 56, 4, 2, 1: SPRINT "THAT WE COULD DO.  RIGOR MORTIS", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "IS DEAD.  THE HOUSE SHALL ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "MAGE : ", 25, 15, 44, 56, 4, 2, 1: SPRINT "NOW BE HEADED BY HIS ELDEST", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "SON, RIGOR.               ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "ROBOT: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "THERE IS NO DOCUMENTATION TO  ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "PROVE WHO WAS BORN FIRST. ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "ROBOT: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "I COULD HAVE BEEN AQUIRED ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "BEFORE ANY OF YOU.        ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "TICK : ", 25, 15, 44, 56, 4, 2, 1: SPRINT "YOU CAN'T RUN THE HOUSE.  YOU ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "ARE A MACHINE!  A ROBOT!  ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "MAGE : ", 25, 15, 44, 56, 4, 2, 1: SPRINT "THE ROBOT, RYAN, IS CORRECT.  ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "ANY OF US COULD HAVE BEEN...", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "FAIRY: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "ENOUGH!  DOES NO ONE CARE THAT", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "RIGOR MORTIS IS DEAD...?    ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "FAIRY: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "BESIDES... I'M PROBABLY THE   ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "OLDEST...                   ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay .5
FOR sv = 0 TO 140: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "       ", 25, 15, 44, 56, 4, 2, 1: SPRINT "AND SO THE CHILDREN OF RIGOR  ", -1, 15, 44, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "MORTIS FIGHT TO GAIN CONTROL", -1, 22, 44, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "       ", 25, 15, 44, 56, 4, 2, 1: SPRINT "OF THE ESTATE.  WILL THE TWO  ", -1, 15, 44, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "MURDERERS EVER BE CAUGHT?   ", -1, 22, 44, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "       ", 25, 15, 44, 56, 4, 2, 1: SPRINT "AND WHO WILL HEAD THE HOUSE   ", -1, 15, 44, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "OF THE LATE RIGOR MORTIS...?", -1, 22, 44, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), I4%, PSET
TDelay 2
FOR sv = 319 TO 0 STEP -1: LINE (sv, 0)-(319 - sv, 199), 21 + (sv / 319) * 10: NEXT sv: FOR sv = 0 TO 199: LINE (0, sv)-(319, 199 - sv), 21 + (sv / 319) * 10: NEXT sv: FOR sv = 319 TO 0 STEP -1: LINE (sv, 0)-(319 - sv, 199), 0: NEXT sv: FOR sv = 0  _
TO 199: LINE (0, sv)-(319, 199 - sv), 0: NEXT sv
END SUB

SUB Lance (SD)
'RAIDEN'S WEAPON 2
Dmg = 30: MCost = 5
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
IF SD = 0 THEN PLN = PL2: YN = Y1: YN2 = Y2 ELSE YN = Y2: PLN = PL1: YN2 = Y1
a = a%(30): B = a%(31)
a%(30) = 2559: a%(31) = 200: PUT (0, 0), a%(30), PSET: a%(30) = a: a%(31) = B
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
LINE (319 * (1 - SD), YN * 16 + 8 + 18 + 9)-((1 + SD * 17) * 16 - 1 + 19 * (1 - SD), YN * 16 + 8 + 18 + 9), 22: LINE (160, YN * 16 + 8 + 18 + 7)-((1 + SD * 17) * 16 - 1 + 19 * (1 - SD), YN * 16 + 8 + 18 + 11), 22, BF: TDelay .5
FOR sv = 9 TO 0 STEP -1: LINE (160, YN * 16 + 8 + 18 + sv)-(319 * (1 - SD), YN * 16 + 8 + 18 + 9), 21 + (sv / 9) * 10: LINE (160, YN * 16 + 8 + 18 + 18 - sv)-(319 * (1 - SD), YN * 16 + 8 + 18 + 9), 21 + (sv / 9) * 10: TDelay .01: NEXT sv: TDelay .2

IF INSTR(" 1 2 6 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
IF (YN * 16 + 34) < (YN2 * 16 + 8) OR (YN * 16 + 34) > (YN2 * 16 + 59) THEN Dmg = 0
HP(1 - SD) = HP(1 - SD) - Dmg
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""

END SUB

SUB Laser (SD)
'ALLEGRO'S WEAPON 1
Dmg = 25: MCost = 30
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
IF SD = 0 THEN PLN = PL2: YN = Y1: YN2 = Y2 ELSE YN = Y2: PLN = PL1: YN2 = Y1
PALETTE 1, 0
FOR sv = 0 TO 10: X1 = 319 * SD - (sv / 10) * 319 * SD + (sv / 10) * (319 * (1 - SD)) + 32 * (1 - SD) - 49 * SD: X2 = ((18 * SD) + 1 * (1 - SD)) * 16 + 18 * (1 - SD) + SD: LINE (X1, (YN * 16 + 34) - 20)-(X2, (YN * 16 + 34) + 20), 1, BF: TDelay .01: _
                                                                                                NEXT sv
FOR sv = 0 TO 10 STEP .4: X1 = 319 * SD - (sv / 10) * 319 * SD + (sv / 10) * (319 * (1 - SD)) + 32 * (1 - SD) - 49 * SD: X2 = ((18 * SD) + 1 * (1 - SD)) * 16 + 18 * (1 - SD) + SD: LINE (X1, SIN(sv) * 20 + (YN * 16 + 34))-(X2, YN * 16 + 34), 40: _
                                                                                                TDelay .01: LINE (X1, SIN(sv) * 20 + (YN * 16 + 34))-(X2, YN * 16 + 34), 1: NEXT sv
FOR sv = 0 TO 63 STEP 15: PALETTE 1, sv: TDelay .01: NEXT sv
FOR sv = 0 TO 63 STEP 15: PALETTE 1, 63 + sv * 256 + sv * 65536: TDelay .01: NEXT sv
FOR sv = 63 TO 0 STEP -15: PALETTE 1, sv + sv * 256 + sv * 65536: TDelay .01: NEXT sv

IF INSTR(" 1 2 6 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
IF (YN * 16 + 34) < (YN2 * 16 + 8) OR (YN * 16 + 34) > (YN2 * 16 + 59) THEN Dmg = 0
HP(1 - SD) = HP(1 - SD) - Dmg
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
END SUB

SUB LShock (SD)
'RYAN'S WEAPON 1
Dmg = 30: MCost = 10
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
IF SD = 0 THEN PLN = PL2: YN = Y1: YN2 = Y2 ELSE YN = Y2: PLN = PL1: YN2 = Y1
LINE (319 * (1 - SD), YN * 16 + 34)-(((18 * SD) + 1 * (1 - SD)) * 16 + 18 * (1 - SD) + SD, YN * 16 + 34), 44
FOR sv = ((18 * SD) + 1 * (1 - SD)) * 16 + 18 * (1 - SD) + SD TO 319 * (1 - SD) STEP 10 - 20 * SD: LINE -(sv, YN * 16 + 29 + INT(RND * 11)), 31: SOUND 40, .1: TDelay .01: NEXT sv
LINE (((18 * SD) + 1 * (1 - SD)) * 16 + 18 * (1 - SD) + SD, YN * 16 + 34)-(((18 * SD) + 1 * (1 - SD)) * 16 + 18 * (1 - SD) + SD, YN * 16 + 34), 40: FOR svv = ((18 * SD) + 1 * (1 - SD)) * 16 + 18 * (1 - SD) + SD TO 319 * (1 - SD) STEP 40 - 80 * SD: _
                                                                                                    FOR sv = 0 TO 1: LINE -(svv, YN * 16 + 34 - 5 + sv * 10), 40: TDelay .01: NEXT sv, svv
IF INSTR(" 1 2 6 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
IF (YN * 16 + 34) < (YN2 * 16 + 8) OR (YN * 16 + 34) > (YN2 * 16 + 59) THEN Dmg = 0
HP(1 - SD) = HP(1 - SD) - Dmg
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
END SUB

SUB Nuke (SD)
'RIGOR'S SPELL 1
Dmg = 20: MCost = 25
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
FOR svv = 0 TO 4
PALETTE 1, 4144959
'XX = INT(RND * 50) + 50: YY = INT(RND * 106) + 43
XX = 50: YY = (svv / 4) * 130 + 8 + 43
FOR sv = 0 TO 50
CIRCLE (XX * ABS(SD = 1) + (319 - XX) * ABS(SD = 0), YY), sv, 1, 0, 3.14, 1 / 2
CIRCLE (XX * ABS(SD = 1) + (319 - XX) * ABS(SD = 0), YY), sv, 1, 3.14, 0, 1 / 5
SOUND 65 - sv / 2, .1
NEXT sv
NEXT svv
FOR sv = 63 TO 0 STEP -1
PALETTE 1, INT(55 + (sv / 63) * 5) + sv * 256 + sv * 65536
NEXT sv
IF SD = 0 THEN PLN = PL2: YN = Y2 ELSE PLN = PL1: YN = Y1
IF INSTR(" 0 3 4 7 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
HP(1 - SD) = HP(1 - SD) - Dmg
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB Obfuscate (SD)
'RYAN'S SPELL 2
MCost = 5
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
IF SD = 0 THEN PLN = PL2: YN = Y2 ELSE YN = Y1: PLN = PL1
OBF = (2 - SD)
FOR sv = 0 TO 4
PLAY "mbl64n1n9n5": TDelay .05
LINE ((18 * (1 - SD) + 1 * SD) * 16, YN * 16 + 8)-((18 * (1 - SD) + 1 * SD) * 16 + 17, YN * 16 + 10 + 3 * 17), 31, BF: TDelay .05
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
NEXT sv
MP(SSD) = MP(SSD) - MCost
Stat 4
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB Shrapnel (SD)
'RIGOR'S WEAPON 2
MCost = 40
DIM P1(2), P2(2), P3(2), P4(2)
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
P1(0) = 185: P2(0) = 50: P3(0) = 1: P4(0) = 1
P1(1) = 85: P2(1) = 150: P3(1) = 1: P4(1) = 1
P1(2) = 285: P2(2) = 150: P3(2) = 1: P4(2) = 1
FOR svv = 0 TO 39
P1(0) = P1(0) + 0 * P3(0):         P2(0) = P2(0) + 1 * P4(0)
P1(1) = P1(1) - 1 * P3(1):         P2(1) = P2(1) - 2 * P4(1)
P1(2) = P1(2) - 2 * P3(2):         P2(2) = P2(2) - 1 * P4(2)
FOR sv = 0 TO 10
CL = 21 + sv
LINE (P1(0) + sv, P2(0) + sv)-(P1(1) + sv, P2(1) + sv), CL: LINE (P1(1) + sv, P2(1) + sv)-(P1(2) - sv, P2(2) - sv), CL: LINE (P1(2) - sv, P2(2) - sv)-(P1(0) + sv, P2(0) + sv), CL
NEXT sv
NEXT svv
TDelay .5
FOR sv = 0 TO 6.28 STEP .05: LINE (160, 120)-(160 - SIN(sv) * 150, 120 - COS(sv) * 150), 31: NEXT sv
HP(0) = 1: HP(1) = 1
MP(SSD) = MP(SSD) - MCost
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "MORTAL", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "DAMAGE!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
TDelay 1
PUT (0, 0), a%, PSET
Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END SUB

SUB SPRINT (Msg$, LXP, LYP, FC, BC, S, ST, VT)
IF LXP = -1 THEN LXP = OLXP
IF LYP = -1 THEN LYP = OLYP
IF LXP = -2 THEN
M$ = ""
FOR sv = 1 TO LEN(Msg$)
IF MID$(Msg$, sv, 1) = "^" THEN sv = sv + 1 ELSE M$ = M$ + MID$(Msg$, sv, 1)
NEXT sv
LXP = INT((320 - LEN(M$) * 7) / 2)
END IF
IF LYP = -2 THEN LYP = CINT(((39 - 5) / 2) * 5)
U = -1: OLXP = LXP: OLYP = LYP
a$ = STR$(LXP): B$ = STR$(LYP): BC$ = STR$(BC): FC$ = STR$(FC): S$ = STR$(S)
Msg$ = UCASE$(Msg$)
FOR sv = 1 TO LEN(Msg$)
SELECT CASE MID$(Msg$, sv, 1)
CASE "A"
M1$ = "u2e2f2l4r4d2"
CASE "B"
M1$ = "u4r3fgl2r2fgl3"
CASE "C"
M1$ = "brr3l3hu2er3"
CASE "D"
M1$ = "u4r3fd2gl3"
CASE "E"
M1$ = "u4r4l4d2r2l2d2r4"
CASE "F"
M1$ = "u4r4l4d2r2"
CASE "G"
M1$ = "brr3l3hu2er3l3gd2fr3u2l2"
CASE "H"
M1$ = "u4d2r4u2d4"
CASE "I"
M1$ = "r4l2u4l2r4"
CASE "J"
M1$ = "brhfr2eu3"
CASE "K"
M1$ = "u4d3e3g2f2"
CASE "L"
M1$ = "u4d4r4"
CASE "M"
M1$ = "u4f2e2d4"
CASE "N"
M1$ = "u4f4u4"
CASE "O"
M1$ = "brhu2er2fd2gl2"
CASE "P"
M1$ = "u4r3fgl3"
CASE "Q"
M1$ = "brhu2er2fd2dhfl3"
CASE "R"
M1$ = "u4r3fgl3r2f2"
CASE "S"
M1$ = "r3ehl2her3"
CASE "T"
M1$ = "br2u4l2r4"
CASE "U"
M1$ = "brhu3d3fr2eu3"
CASE "V"
M1$ = "br2h2u2d2f2e2u2"
CASE "W"
M1$ = "buu3d3fefeu3"
CASE "X"
M1$ = "e4g2f2h4"
CASE "Y"
M1$ = "br2u2e2g2h2f2"
CASE "Z"
M1$ = "r4l4e4l4"
CASE ":"
M1$ = "br2rulbu2rul"
CASE "."
M1$ = "br2r"
CASE "!"
M1$ = "br2rbu2u2ld2"
CASE "?"
M1$ = "br2rbu2lrehl2g"
CASE ","
M1$ = "relur"
CASE "'"
M1$ = "brbu2relur"
CASE "/"
M1$ = "e4"
CASE "("
M1$ = "br3hu2e"
CASE ")"
M1$ = "breu2h"
CASE "1"
M1$ = "brr2lu4l"
CASE "2"
M1$ = "r4l4uer2ehl3"
CASE "3"
M1$ = "bufr2eheul4"
CASE "4"
M1$ = "br3u4g3r4"
CASE "5"
M1$ = "r3ehl3u2r4"
CASE "6"
M1$ = "bufr2ehl3uer3"
CASE "7"
M1$ = "br2ue2ul4"
CASE "8"
M1$ = "bufr2ehl2her2f"
CASE "9"
M1$ = "brr2eu2hl2gfr2"
CASE "0"
M1$ = "bufr2eu2hl2gd2bre2"
CASE ">"
M1$ = "bubrhu2rdbr2urdgf"
CASE "<"
M1$ = "bueu2ldbr3urd2g"
CASE "-"
M1$ = "bu2brr2"
CASE "^"
IF MID$(Msg$, sv + 1, 1) = "N" THEN LYP = LYP + 5 + VT: LXP = OLXP: B$ = STR$(LYP): a$ = STR$(LXP)
IF MID$(Msg$, sv + 1, 1) = "U" THEN U = -U
M1$ = "": sv = sv + 1: LXP = LXP - 5 - ST
CASE ELSE
END SELECT
IF U = 1 THEN DRAW "s" + S$ + "bm" + a$ + "," + B$ + "c" + BC$ + "bd5brr" + STR$(4 + ST) + "bm" + a$ + "," + B$ + "c" + FC$ + "bd6r" + STR$(4 + ST)
DRAW "s" + S$ + "bm" + a$ + "," + B$ + "c" + BC$ + "bd4br" + M1$ + "bm" + a$ + "," + B$ + "c" + FC$ + "bd5" + M1$
LXP = LXP + 5 + ST
a$ = STR$(LXP): B$ = STR$(LYP)
M1$ = ""
NEXT sv
LYP = LYP + 5 + VT
OLXP = LXP: OLYP = LYP
END SUB

SUB SStrike (SD)
'MORTIS' WEAPON 1
Dmg = 15: MCost = 5
IF SWeap(SD) = 0 THEN
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
IF MP(SSD) < MCost THEN
IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
EXIT SUB
END IF
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
MP(SSD) = MP(SSD) - MCost: Stat SD
SWeap(SD) = 1
PALETTE 3, 65536 * 63
IF SD = 0 THEN WY(SD) = Y1 * 16 + 8 + 23 ELSE WY(SD) = Y2 * 16 + 8 + 23
WX(SD) = 242 * SD + 76 * (1 - SD)
END IF
IF SWeap(SD) = 1 THEN
WX(SD) = WX(SD) + 7 * (1 - SD) - 7 * SD
WY(SD) = WY(SD) + (WX(SD) < 156 - 25 * (SD * 2 - 1)) - (WX(SD) >= 156 - 25 * (SD * 2 - 1)): TDelay .005: LINE (WX(SD) + 29 * (SD * 2 - 1), WY(SD) - 4)-(WX(SD) + 40 * (SD * 2 - 1), WY(SD) + 4), 3, BF: DRAW "bm" + STR$(WX(SD)) + "," + STR$(WY(SD)) +  _
"a" + STR$((1 - SD) * 2) + "c16er25u3r2d3r5d2l5d3l2u3l25uc25r26c40u3d6u3r5a0"
IF WX(SD) > 312 OR WX(SD) < 7 THEN SWeap(SD) = -1
END IF
IF SWeap(SD) < 0 THEN
IF SD = 0 THEN YN = Y2: PLN = PL2 ELSE PLN = PL1: YN = Y1
FOR sv = 63 TO 0 STEP -3: TDelay .005: PALETTE 3, sv * 65536: NEXT sv
IF INSTR(" 1 2 6 ", STR$(PLN)) > 0 THEN Dmg = Dmg \ 2
IF WY(SD) < (YN * 16 + 8 - 2) OR WY(SD) > (YN * 16 + 8 + 53 + 2) THEN Dmg = 0
HP(1 - SD) = HP(1 - SD) - Dmg
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
IF Dmg = 0 THEN SPRINT "MISSED!", -2, 100 - 3, 44, 16, 4, 2, 1 ELSE SPRINT LTRIM$(STR$(Dmg)) + " DMG!", -2, 100 - 3, 44, 16, 4, 2, 1
TDelay .5
'PUT (0, 0), A%, PSET
TClip 0, 8, a%(), 8
Stat (1 - SD)
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
IF GRVC = 1 THEN SSD = (1 - SD) ELSE SSD = SD
SWeap(SD) = 0: IF SSD = 0 THEN FirW1 = 0 ELSE FirW2 = 0
IF GRVC = 1 THEN SWeap(0) = 0: SWeap(1) = 0: FirW1 = 0: FirW2 = 0
OBX = BX: OBY = BY: GET (BX, BY)-(BX + 8, BY + 8), B2%: PUT (BX, BY), B2%, PSET: PUT (BX, BY), B%(0, BL), PSET
DO: LOOP UNTIL INKEY$ = ""
END IF
END SUB

SUB Stat (SD)
IF SD >= 0 AND SD <= 1 THEN
IF HP(SD) < 1 THEN HP(SD) = 1
LINE (SD * 186 + 70, 0)-(SD * 186 + 70 + 7 * 3, 7), 32, BF: LINE (SD * 186 + 112, 0)-(SD * 186 + 112 + 7 * 3, 7), 32, BF
SPRINT STR$(HP(SD)), SD * 186 + 63, 1, 42, 16, 4, 2, 1
SPRINT STR$(MP(SD)), SD * 186 + 105, 1, 78, 16, 4, 2, 1
END IF
IF SD = 2 THEN
FOR sv = 0 TO 1
IF HP(sv) < 1 THEN HP(sv) = 1
LINE (sv * 186 + 70, 0)-(sv * 186 + 70 + 7 * 3, 7), 32, BF: LINE (sv * 186 + 112, 0)-(sv * 186 + 112 + 7 * 3, 7), 32, BF
SPRINT STR$(HP(sv)), sv * 186 + 63, 1, 42, 16, 4, 2, 1
SPRINT STR$(MP(sv)), sv * 186 + 105, 1, 78, 16, 4, 2, 1
NEXT sv
END IF
IF SD = 3 THEN
FOR sv = 0 TO 1
IF sv = 0 THEN NM$ = NM0$ ELSE NM$ = NM1$
SPRINT NM$, sv * 186, 1, 31, 16, 4, 2, 1
SPRINT "H:", sv * 186 + 56, 1, 40, 16, 4, 2, 1
SPRINT "M:", sv * 186 + 98, 1, 76, 16, 4, 2, 1
IF HP(sv) < 1 THEN HP(sv) = 1
SPRINT STR$(HP(sv)), sv * 186 + 63, 1, 42, 16, 4, 2, 1
SPRINT STR$(MP(sv)), sv * 186 + 105, 1, 78, 16, 4, 2, 1
NEXT sv
END IF
IF SD = 4 THEN
FOR sv = 0 TO 1
IF HP(sv) < 0 THEN HP(sv) = 0
LINE (sv * 186 + 70, 0)-(sv * 186 + 70 + 7 * 3, 7), 32, BF: LINE (sv * 186 + 112, 0)-(sv * 186 + 112 + 7 * 3, 7), 32, BF
SPRINT STR$(HP(sv)), sv * 186 + 63, 1, 42, 16, 4, 2, 1
SPRINT STR$(MP(sv)), sv * 186 + 105, 1, 78, 16, 4, 2, 1
NEXT sv
END IF
IF sv >= 0 AND sv <= 4 THEN
LINE (156, 1)-(134, 3), 112, BF: LINE (160, 1)-(182, 3), 112, BF
LINE (134, 1)-(134 + (HP(0) / MHP(0)) * 22, 3), 40, BF: LINE (182, 1)-(182 - (HP(1) / MHP(1)) * 22, 3), 40, BF
LINE (156, 5)-(134, 6), 122, BF: LINE (160, 5)-(182, 6), 122, BF
LINE (134, 5)-(134 + (MP(0) / MMP(0)) * 22, 6), 45, BF: LINE (182, 5)-(182 - (MP(1) / MMP(1)) * 22, 6), 45, BF
LINE (158, 1)-(158, 6), 53
END IF
END SUB

SUB SuperNova (SD)
FOR sv = 0 TO 140 STEP 5: LINE (160 - sv, 25)-(160 + sv, 25), 32: FOR svv = 1 TO 5: LINE (160 - sv - svv, 25 - svv)-(160 + sv + svv, 25 + svv), 31 - svv, B: NEXT svv: NEXT sv
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
IF HP(0) > 1 THEN
SPRINT "DUBHE: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "TRYING TO SNEAK ONE BY ME,  ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "EH?  WELL, TAKE THIS!       ", -1, 22, 31, 57, 4, 2, 1
ELSE
SPRINT "DUBHE: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "(HUFF..PUFF)  OK!  ENOUGH!  ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "                            ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "DUBHE: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "QUITE A FIGHT, WOULDN'T YOU ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "SAY?                        ", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
FOR sv = 0 TO 15: LINE (20, 25 - sv)-(300, 25 + sv), 32, B: FOR svv = 1 TO 5: LINE (20 - svv, 25 - sv - svv)-(300 + svv, 25 + sv + svv), 31 - svv, B: NEXT svv: NEXT sv
SPRINT "DUBHE: ", 25, 15, 44, 56, 4, 2, 1: SPRINT "LET'S SETTLE THIS ONCE AND  ", -1, 15, 31, 57, 4, 2, 1
SPRINT "       ", 25, 22, 44, 56, 4, 2, 1: SPRINT "FOR ALL.  NO WALLS, NO TRICKS.", -1, 22, 31, 57, 4, 2, 1
DO: LOOP UNTIL INKEY$ = "": a$ = INPUT$(1)
PUT (0, 0), a%(0), PSET: Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
EXIT SUB
END IF
TDelay 2: PUT (0, 0), a%(0), PSET: Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
PALETTE 1, 0: PALETTE 8, 0
FOR sv = 0 TO 25
CIRCLE (160, 100), sv * 6, ABS(sv AND 1) * 7 + 1, , , 1 / 3
PAINT (160, 100), ABS(sv AND 1) * 7 + 1, ABS(sv AND 1) * 7 + 1
TDelay .01
NEXT sv
TDelay .5: FOR sv = 1 TO 10: CIRCLE (160, 100), sv, 32 - sv, , , 1 / 2: LINE (160 - (sv / 10) * 145, 100)-(160 - ((sv - 1) / 10) * 145, 100), 32 - sv: LINE (160 + ((sv - 1) / 10) * 145, 100)-(160 + (sv / 10) * 145, 100), 32 - sv: TDelay .1: NEXT sv
PLAY "mbl64n6n5n7n4n8n3n9n2n10n1": FOR sv = 0 TO 100 STEP 5: LINE (0, 100 - sv)-(319, 100 - (sv - 10)), 31, BF: LINE (0, 100 + sv)-(319, 100 + (sv - 10)), 31, BF: TDelay .01: NEXT sv
LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 32, BF: LINE (156 - 31, 100 - 10)-(156 + 31, 100 + 10), 76, B
SPRINT "HALF", -2, 100 - 3 - 4, 44, 16, 4, 2, 1
SPRINT "DAMAGE!", -2, 100 - 3 + 4, 44, 16, 4, 2, 1
HP(0) = HP(0) - CINT(MHP(0) / 2): HP(1) = HP(1) - CINT(MHP(1) / 2)
TDelay 1: PUT (0, 0), a%(0), PSET: Stat 3
PUT (1 * 16, Y1 * 16 + 8), C%(0, 8), PSET: PUT (1 * 16, Y1 * 16 + 8 + 18), C%(0, PL1), PSET: PUT (1 * 16, Y1 * 16 + 8 + 36), C%(0, 8), PSET
PUT (18 * 16, Y2 * 16 + 8), C%(0, 8), PSET: PUT (18 * 16, Y2 * 16 + 8 + 18), C%(0, PL2), PSET: PUT (18 * 16, Y2 * 16 + 8 + 36), C%(0, 8), PSET
END SUB

SUB TClip (XX, YY, S%(), CLP) STATIC
OS1% = S%((S%(0) / 16) * CLP): OS2% = S%((S%(0) / 16) * CLP + 1)
S%(1) = S%(1) - CLP
S%((S%(0) / 16) * CLP) = S%(0): S%((S%(0) / 16) * CLP + 1) = S%(1)
PUT (XX, YY), S%((S%(0) / 16) * CLP), PSET
S%((S%(0) / 16) * CLP) = OS1%: S%((S%(0) / 16) * CLP + 1) = OS2%: S%(1) = S%(1) + CLP
END SUB

SUB TDelay (tm)
tmr = TIMER + tm
DO UNTIL TIMER >= tmr
LOOP
END SUB

